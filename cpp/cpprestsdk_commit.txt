 Delete apparently broken .vcxprojs and .pfxes. (#1415)
 Mint v2.10.16. (#1395)
 CMake fixes + CMake search for OpenSSL (macOS) (#1383)

Signed-off-by: Clovis Durand <cd.clovel19@gmail.com>
Co-authored-by: Billy Robert O'Neal III <bion@microsoft.com>
 Update submodule websocketpp to 0.8.2 (#1392)

* Update submodule websocketpp to 0.8.2

- Update to WebSocket++/0.8.2
  commit 56123c87598f8b1dd471be83ca841ceae07f95ba
- Fixes build issues with boost 1.70 and newer

* Update vcpkg.

* Remove defunct VS2015 configurations.

Co-authored-by: Billy Robert O'Neal III <bion@microsoft.com>
 Do not report errors (such as EBADF and EINVAL) from setsockopt here, since this is a performance optimization only, and hard errors will be picked up by the following operation (#1393)
 Fix compilation with GCC 4.8/4.9, which was broken by commit 53fab3aa124eb712c0d5c4861438ecdbc5b5c2d5. (#1379)
 Add support for HTTP redirection in ASIO and WinHTTP-based http_clients (#1328)
 Fix more http test build fails in certain configurations (#1332)
 Remove redundant std::move noted by gcc 9.2 (-Wredundant-move) (#1370)
 Static analyzer (PVS Studio) fixes (#1372)

* [init] Initialize stream mode to in by default

* [leak] Fix memory leak of server api ptr

Should call delete on pointer instead of releasing it to the caller.

* [macro] Ensure priority of macro computation

Enclose macro args in round brackets to ensure operators priority.

* [prep] Fix comment after preprocessor macro

* [ub] Use typed pointer in delete operation

* Delete of void pointer is UB.  See section 5.3.5/3.  SO question:
https://stackoverflow.com/questions/941832/is-it-safe-to-delete-a-void-pointer
* Windows APIs used here return FALSE in case of failure, and
non-FALSE on success.  There is no info in spec that only TRUE
value indicates success.  Correct way to implement check for
success call is to compare with false like result != FALSE.

* [fmt] Fix military RFC1123 time format parsing

Ensure + or - sign is used for time zone offset in RFC1123 military
time format.

* Remove redundant != FALSE.

Co-authored-by: Billy Robert O'Neal III <bion@microsoft.com>
 [#1349] Expose json::value::parse for UTF8 string on Windows (#1350)
 libcpprestsdk: fix building as a static library (#1344)

On Unix, try to use pkg-config to find OpenSSL. This will automatically
find any dependent libraries and put them in the correct order for
linking. If pkg-config is not available or system is not UNIX, fallback
on current mechanism

Signed-off-by: Adam Duskett <aduskett@gmail.com>
[Retrieved (and slightly updated) from:
https://git.buildroot.net/buildroot/tree/package/libcpprestsdk/0001-libcpprestsdk-fix-building-as-a-static-library.patch]
Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>
 Mint v2.10.15. (#1336)
 Fix tcp::resolver data race in the asio backend and be defensive against empty results (#1339)

* Move TCP resolver to asio_context rather than asio_client, as that type is not safe to touch from multiple threads.

* Defend against empty responses from async_resolve.

Co-authored-by: Jinming Hu jinming.hu@microsoft.com
 Use C++11 synchronization classes under macOS too (#1342)

There doesn't seem to be any reason to prefer using Boost libraries to
standard C++ classes under macOS, so use the latter ones unconditionally
on this platform too, just as it was already done for the other Unix
systems.

This notably avoids dependencies on the compiled Boost libraries, which
don't have to be compiled before building C++ REST SDK any more.
 Add Ubuntu 18.04 testing. (#1340)
 Enable HTTP compression support on all platforms (#1322)
 Turn VS2015 back on now that vcpkg is fixed. (#1335)
 Add TCP_NODELAY to disable Nagle's algorithm in Boost.ASIO-based http_client (#1310)

* Add TCP_NODELAY to disable Nagle's algorithm to avoid waiting for ACK for HTTP request headers before transmitting the request body, in order to significantly improve performance for requests with bodies (see #1201)

* Also add TCP_NODELAY on the server-side, to disable Nagle's algorithm to avoid waiting for ACK for HTTP response headers before transmitting the response body (see #1201)
 Use LC_ALL_MASK rather than LC_ALL when calling newlocale (#1330)

Resolves #1329 as @jason-ha suggests
 Change default installation directory for cmake files to cmake/cpprestsdk (#1306)
 Update vcpkg and boost on Android (#1334)

* websocketpp appears a lost cause, disable websockets for Android

Also fixes #1333 as a drive-by :)
> websocketpp appears a lost cause, disable websockets for Android

@BillyONeal, is that just because in switching from Boost 1.69.0 to Boost 1.70.0, you see #1302?

That looks to be the case. Unfortunately Azure Pipelines updated the NDK version such that boost-for-android required the boost version bump, and websocketpp appears defunct now :(

Yes :-(
... although... the patch for this is more-or-less the only additional thing on https://github.com/zaphoyd/websocketpp branch **develop**. Is it worth trying out that?

 Fix various warnings reported by gcc 9.3, and possibly earlier versions (#1289)

Signed-off-by: Gavin Halliday <gavin.halliday@lexisnexis.com>
 Added comparison overrides to utility::datetime (#1276)

I was trying to compare timestamps and noticed that the code doesn't support this so std::max and std::min don't work with datetime timestamps. I've added less/greater/less-or-equal/greater-or-equal operators.
 Fix test case broken by commit f4c863bcf55b2df25aa087377d7ec1978ae0af29 (#1288)
 Update vcpkg and remove tests that look for web servers that no longer exist (#1293)
 remove trailing slash on websocketpp submodule url, which causes checkout failure on CircleCI with git 2.22.0 (#1263)
 Update README.md (#1256)
 http_server_httpsys.cpp requires linking against httpapi.lib, http_client_winhttp.cpp does not. (#1253)
 Support for WinHTTPAL curl-to-WinHTTP adapter (#1182)
