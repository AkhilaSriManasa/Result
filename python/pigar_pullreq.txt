 --yes/--no to answer all possible questions
 
 V0.10.0 final
 Close #73 
 Jupyter notebook(.ipynb) support
 
 Refactor the main logic
 Fix #47, #58, #61 and #65.

- [x] CI: GitHub workflow
 [WIP] Support ipynb
 This PR adds support for Jupyter notebooks. (closes issue #70)

 Option to turn off filenames and line numbers in requirements.txt
 This addresses one suggestion from #65 

It adds an option ("-m" or "--minimal") that disables printing of the files and line numbers where each module is printed. By default, the files and line numbers are still printed.
 Partially fix #48, make parse_reqs read other requirements files recu…
 …rsively when a line has -r.

This pull request addresses, but does not completely solve, #48. It only addresses the -r option, and not --extra-index-url, --trusted-host, etc.

In the modified version of parse_reqs, for every requirements line that looks like "-r more-requirements.txt", the function will open the named file and record its requirements as well.

I tested my code changes using the requirements files in a clone of https://github.com/be-hase/ghe-line-notify/tree/master.

Without this change, I see the following output when I run pigar -c in the root directory of that repository:
```
(envname) username@pcname:~/pigar/examples/ghe-line-notify$ pigar -c
Starting check requirements latest version ...
Searching file in "/home/username/pigar/examples/ghe-line-notify" ...
Checking requirements latest version ...
Traceback (most recent call last):
  File "/home/username/miniconda3/envs/envname/bin/pigar", line 11, in <module>
    load_entry_point('pigar', 'console_scripts', 'pigar')()
  File "/home/username/pigar/pigar/__main__.py", line 271, in main
    Main()
  File "/home/username/pigar/pigar/__main__.py", line 31, in __init__
    self.check_reqs_latest_version(
  File "/home/username/pigar/pigar/__main__.py", line 98, in check_reqs_latest_version
    latest = check_latest_version(pkg)
  File "/home/username/pigar/pigar/pypi.py", line 65, in check_latest_version
    return Downloader().download_package(package).version()
  File "/home/username/pigar/pigar/pypi.py", line 245, in download_package
    pkg_info = self.download(PKG_INFO_URL.format(name))
  File "/home/username/pigar/pigar/pypi.py", line 229, in download
    resp.raise_for_status()
  File "/home/username/miniconda3/envs/envname/lib/python3.8/site-packages/requests/models.py", line 940, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://pypi.org/pypi/-r%20requirements/common.txt/json/
```

After the change, the program correctly recognizes the additional requirements file and parses the requirements within.
```
(envname) username@pcname:~/pigar/examples/ghe-line-notify$ pigar -c
Starting check requirements latest version ...
Searching file in "/home/username/pigar/examples/ghe-line-notify" ...
Checking requirements latest version ...
Checking requirements latest version done.

 =======================================
  PACKAGE            | CURRENT | LATEST
  -------------------+---------+-------
  alembic            | 0.8.8   | 1.3.2 
  blinker            | 1.4     | 1.4   
  click              | 6.6     | 7.0   
  Flask              | 0.11.1  | 1.1.1 
  Flask-DebugToolbar | 0.10.0  | 0.10.1
  Flask-Migrate      | 2.0.0   | 2.5.2 
  Flask-Script       | 2.0.5   | 2.0.6 
  Flask-SQLAlchemy   | 2.1     | 2.4.1 
  gunicorn           | 19.6.0  | 20.0.4
  itsdangerous       | 0.24    | 1.1.0 
  Jinja2             | 2.8     | 2.10.3
  Mako               | 1.0.4   | 1.1.0 
  MarkupSafe         | 0.23    | 1.1.1 
  python-editor      | 1.0.1   | 1.0.4 
  requests           | 2.11.1  | 2.22.0
  SQLAlchemy         | 1.0.15  | 1.3.12
  Werkzeug           | 0.11.11 | 0.16.0
  psycopg2           | 2.6.2   | 2.8.4 
 =======================================
(envname) username@pcname:~/pigar/examples/ghe-line-notify$ 
```
 Use check path instead of current directory
 This fixes #63

The problem was that the check_reqs_latest_version method of Main did not add check_path to the base name of the requirements file before finding the absolute path, so all of the final paths looked like ``current-directory/file-with-requirements.txt`` instead of ``current-directory/check_path/file-with-requirements.txt``

This pull request adds check_path before finding the absolute path.
 add conda installation instructions
 Adds the line ``conda install -c conda-forge pigar`` to the instructions
 Bump version: 0.9.2
 
 Support comparison operators
 Dirty code..
 Upgrade requests to fix potential security vulnerabilities
 
 Fix #44
 
 Package the license file
 Ensure the license file is packaged in `sdist`s, `whl`s, and other package formats.
 Decompress gzip Content-Encoding
 
 Add Py3.6
 
 Fix 34
 
 Various fix
 
 Fix #26
 
 support importlib.import_module and __import__
 PR for #19 

 Fix ignore dir feature
 Force user's ignore_dir input to absolute path, so that `-i ./ignore_dir` and `-i ignore_dir` are the same. And prune the search once the directory to ignore is met.

 Fix a typo in README
 differen -> different

 fixes a single pep8 warning in example2.py under imports_example
 
 fixes the pep8 warnings
 This fixes most of the warnings generated while running pep8 test, except this
`
/pypi.py:194:80: E501 line too long (80 > 79 characters)
`
I think here the workaround can be
`
    'User-Agent':
        ('Mozilla/5.0 (X11; Linux x86_64; rv:13.0) AppleWebKit/537.36'
         ' (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36'),
`

Let me know if this is right or not?

 Revert 43183aa0afcbc440c22f0f22535e65168339bd91
 Reverts Damnever/pigar#13

 use `elts[0]` to access str_code when the rest of `exec` is tuple
 People can call `exec` like this: `exec("print(hello world)")`.
They can also call it like this: `exec("print(hello world), global, local")`.

In the first case, the type of `node.body` is string. However, in the second case, the type of `node.body` is tuple. So we need to check if the second case happens and handle it.

Now pigar will correctly parse the file below:

```
#!/usr/bin/env python
# coding: utf-8

exec("import a", {})
```

 make it work with "python -m pigar"
 
 Improve grammar in various places in README.rst
 I also tried to reword some phrases that seemed like translation errors. For example, when you say regular expressions are “violent”, I think you mean “hacky”.

 Fix grammar in “generated by pigar” message
 
 Hopefully improved clarity in some parts of the readme
 Just improved some of the grammar, etc. to make the README clearer.

I couldn't tell, did you want the 'Futures' header to say 'Features' or leave it as is?

Thanks,
Mark

