 Make images urls in long_description absolute
 https://github.com/life4/flakehell/issues/63
 Safely test for optional "type" field in poetry lock
 The "source" field in a poetry lock file can optionally have a "type"
field. However, in cases where an alternative "simple" index is offered,
e.g., artifactory, this type field is not used. This patch makes
checking this type field safe by returning a None in the case that the
field doesn't exist.

Fixes: https://github.com/dephell/dephell/issues/437
Do you have any feedback @orsinium ? Thanks!

 Cache classes may create files out of cache dir
 ## Short description

Cache classes will create files out of cache dir if any key starts with `/`.

## Steps to reproduce

```python
>>> from dephell.cache import TextCache
>>> TextCache('/code/requirements.txt').path
PosixPath('/code/requirements.txt.txt')
```

## Expected behaviour

I think it should raise error or warn the user.

What is the use case? Do you use it in your application? It's not a part of dephell public API. I'm going to move it into `dephell._cache`.

I wish to preliminarily compile/build source packages and push them to production server. The cache will be used to save generated wheels from pipeline to pipeline. My script is located [here](https://gitlab.com/_bugchecker/ci-cd-helpers/-/blob/master/src/precompile_source_deps.py). It would be great if you integrated this opportunity to dephell. I need custom requirements detecting (both with and without extra fields).

 Converting from "poetry.lock" with Private Source Repo Produces 'Key "type" does not exist." Error
 ## Short description

Hello! We use Artifactory internally to house our python wheels. When I try to convert from a `poetry.lock` to any other format, I get the following 

```python
tomlkit.exceptions.NonExistentKey: 'Key "type" does not exist.'
> ~/dephell/venvs/dephell/lib/python3.6/site-packages/tomlkit/container.py(540)__getitem__()
-> raise NonExistentKey(key)
```

## Output

I dug into the source a bit, and it appears you are searching for a "type" key under the "source" field in the poetry.lock, but no such field exists. I am using Poetry 1.0.5 if that matters.

## Steps to reproduce
Unfortunately, our Artifactory repo is not public. However, you can copy my poetry.lock and pyproject.toml file to reproduce

then just run
`dephell deps convert` to see the issue


## Traceback


```
dephell deps convert --traceback
ERROR NonExistentKey: 'Key "type" does not exist.'
Traceback (most recent call last):
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/cli.py", line 66, in main
    result = handler()
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/commands/deps_convert.py", line 45, in __call__
    resolver = loader.load_resolver(path=self.config['from']['path'])
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/converters/base.py", line 94, in load_resolver
    root = self.load(path=path)
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/converters/base.py", line 54, in load
    root = self.loads(content=stream.read())
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/converters/poetrylock.py", line 66, in loads
    repo=root.repo,
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/converters/poetrylock.py", line 120, in _make_deps
    if content['source']['type'] == 'legacy':
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/tomlkit/items.py", line 997, in __getitem__
    return self._value[key]
  File "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/tomlkit/container.py", line 540, in __getitem__
    raise NonExistentKey(key)
tomlkit.exceptions.NonExistentKey: 'Key "type" does not exist.'
```

## Config

```toml
[tool.poetry]
name = "test"
version = "0.1.0"
description = ""

[tool.poetry.dependencies]
python = "^3.6.1"
pandas = "^1.0.3"
internal-package = "^0.1.29"

[tool.poetry.dev-dependencies]
pytest = "^5.2"

[[tool.poetry.source]]
name = "artifactory"
url = "https://pypi.example.com/simple"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.dephell.main]
from = {format = "poetrylock", path = "poetry.lock"}
to = {format = "pip", path = "requirements.txt"}
warehouse = ["pypi.example.com/simple"]
```

poetry.lock
```toml
[[package]]
category = "main"
description = "Low-level AMQP client for Python (fork of amqplib)."
name = "amqp"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.5.2"

[package.dependencies]
vine = ">=1.1.3,<5.0.0a1"

[[package]]
category = "main"
description = "A library for parsing ISO 8601 strings."
name = "aniso8601"
optional = false
python-versions = "*"
version = "8.0.0"

[[package]]
category = "dev"
description = "Atomic file writes."
marker = "sys_platform == \"win32\""
name = "atomicwrites"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.4.0"

[[package]]
category = "main"
description = "Classes Without Boilerplate"
name = "attrs"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "19.3.0"

[package.extras]
azure-pipelines = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface", "pytest-azurepipelines"]
dev = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface", "sphinx", "pre-commit"]
docs = ["sphinx", "zope.interface"]
tests = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface"]

[[package]]
category = "main"
description = "Python multiprocessing fork with improvements and bugfixes"
name = "billiard"
optional = false
python-versions = "*"
version = "3.6.3.0"

[[package]]
category = "main"
description = "Distributed Task Queue."
name = "celery"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,"
version = "4.4.2"

[package.dependencies]
billiard = ">=3.6.3.0,<4.0"
kombu = ">=4.6.8,<4.7"
pytz = ">0.0-dev"
vine = "1.3.0"

[package.dependencies.redis]
optional = true
version = ">=3.2.0"

[package.extras]
arangodb = ["pyArango (>=1.3.2)"]
auth = ["cryptography"]
azureblockblob = ["azure-storage (0.36.0)", "azure-common (1.1.5)", "azure-storage-common (1.1.0)"]
brotli = ["brotli (>=1.0.0)", "brotlipy (>=0.7.0)"]
cassandra = ["cassandra-driver"]
consul = ["python-consul"]
cosmosdbsql = ["pydocumentdb (2.3.2)"]
couchbase = ["couchbase", "couchbase-cffi"]
couchdb = ["pycouchdb"]
django = ["Django (>=1.11)"]
dynamodb = ["boto3 (>=1.9.178)"]
elasticsearch = ["elasticsearch"]
eventlet = ["eventlet (>=0.24.1)"]
gevent = ["gevent"]
librabbitmq = ["librabbitmq (>=1.5.0)"]
lzma = ["backports.lzma"]
memcache = ["pylibmc"]
mongodb = ["pymongo (>=3.3.0)"]
msgpack = ["msgpack"]
pymemcache = ["python-memcached"]
pyro = ["pyro4"]
redis = ["redis (>=3.2.0)"]
riak = ["riak (>=2.0)"]
s3 = ["boto3 (>=1.9.125)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
solar = ["ephem"]
sqlalchemy = ["sqlalchemy"]
sqs = ["boto3 (>=1.9.125)", "pycurl (7.43.0.2)"]
tblib = ["tblib (>=1.3.0)", "tblib (>=1.5.0)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]
zstd = ["zstandard"]

[[package]]
category = "main"
description = "Composable command line interface toolkit"
name = "click"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "7.1.2"

[[package]]
category = "main"
description = "Cross-platform colored terminal text."
name = "colorama"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "0.4.3"

[[package]]
category = "main"
description = "Backports and enhancements for the contextlib module"
name = "contextlib2"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "0.6.0.post1"

[[package]]
category = "main"
description = "simplified environment variable parsing"
name = "environs"
optional = false
python-versions = ">=3.5"
version = "6.1.0"

[package.dependencies]
marshmallow = ">=2.7.0"
python-dotenv = "*"

[package.extras]
dev = ["pytest", "dj-database-url", "dj-email-url", "flake8 (3.7.9)", "flake8-bugbear (19.8.0)", "pre-commit (>=1.20,<2.0)", "tox"]
django = ["dj-database-url", "dj-email-url"]
lint = ["flake8 (3.7.9)", "flake8-bugbear (19.8.0)", "pre-commit (>=1.20,<2.0)"]
tests = ["pytest", "dj-database-url", "dj-email-url"]

[[package]]
category = "main"
description = "A simple framework for building complex web applications."
name = "flask"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "1.1.2"

[package.dependencies]
Jinja2 = ">=2.10.1"
Werkzeug = ">=0.15"
click = ">=5.1"
itsdangerous = ">=0.24"

[package.extras]
dev = ["pytest", "coverage", "tox", "sphinx", "pallets-sphinx-themes", "sphinxcontrib-log-cabinet", "sphinx-issues"]
docs = ["sphinx", "pallets-sphinx-themes", "sphinxcontrib-log-cabinet", "sphinx-issues"]
dotenv = ["python-dotenv"]

[[package]]
category = "main"
description = "Fully featured framework for fast, easy and documented API development with Flask"
name = "flask-restx"
optional = false
python-versions = "*"
version = "0.2.0"

[package.dependencies]
Flask = ">=0.8"
aniso8601 = ">=0.82"
jsonschema = "*"
pytz = "*"
six = ">=1.3.0"
werkzeug = "*"

[package.extras]
dev = ["blinker", "Faker (2.0.0)", "mock (3.0.5)", "pytest-benchmark (3.2.2)", "pytest-cov (2.7.1)", "pytest-flask (0.15.1)", "pytest-mock (1.10.4)", "pytest-profiling (1.7.0)", "tzlocal", "invoke (1.3.0)", "readme-renderer (24.0)", "twine (1.15.0)", "tox (3.13.2)", "pytest (4.6.5)", "pytest (5.4.1)", "ossaudit", "black (19.10b0)"]
doc = ["alabaster (0.7.12)", "Sphinx (2.1.2)", "sphinx-issues (1.2.0)"]
test = ["blinker", "Faker (2.0.0)", "mock (3.0.5)", "pytest-benchmark (3.2.2)", "pytest-cov (2.7.1)", "pytest-flask (0.15.1)", "pytest-mock (1.10.4)", "pytest-profiling (1.7.0)", "tzlocal", "invoke (1.3.0)", "readme-renderer (24.0)", "twine (1.15.0)", "pytest (4.6.5)", "pytest (5.4.1)", "ossaudit"]

[[package]]
category = "main"
description = "Read metadata from Python packages"
marker = "python_version < \"3.8\""
name = "importlib-metadata"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"
version = "1.6.0"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "rst.linker"]
testing = ["packaging", "importlib-resources"]

[[package]]
category = "main"
description = "Various helpers to pass data to untrusted environments and back."
name = "itsdangerous"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.1.0"

[[package]]
category = "main"
description = "A very fast and expressive template engine."
name = "jinja2"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.11.2"

[package.dependencies]
MarkupSafe = ">=0.23"

[package.extras]
i18n = ["Babel (>=0.8)"]

[[package]]
category = "main"
description = "An implementation of JSON Schema validation for Python"
name = "jsonschema"
optional = false
python-versions = "*"
version = "3.2.0"

[package.dependencies]
attrs = ">=17.4.0"
pyrsistent = ">=0.14.0"
setuptools = "*"
six = ">=1.11.0"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = "*"

[package.extras]
format = ["idna", "jsonpointer (>1.13)", "rfc3987", "strict-rfc3339", "webcolors"]
format_nongpl = ["idna", "jsonpointer (>1.13)", "webcolors", "rfc3986-validator (>0.1.0)", "rfc3339-validator"]

[[package]]
category = "main"
description = "Messaging library for Python."
name = "kombu"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "4.6.8"

[package.dependencies]
amqp = ">=2.5.2,<2.6"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.18"

[package.extras]
azureservicebus = ["azure-servicebus (>=0.21.1)"]
azurestoragequeues = ["azure-storage-queue"]
consul = ["python-consul (>=0.6.0)"]
librabbitmq = ["librabbitmq (>=1.5.2)"]
mongodb = ["pymongo (>=3.3.0)"]
msgpack = ["msgpack"]
pyro = ["pyro4"]
qpid = ["qpid-python (>=0.26)", "qpid-tools (>=0.26)"]
redis = ["redis (>=3.3.11)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
sqlalchemy = ["sqlalchemy"]
sqs = ["boto3 (>=1.4.4)", "pycurl (7.43.0.2)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]

[[package]]
category = "main"
description = "Safely add untrusted strings to HTML/XML markup."
name = "markupsafe"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"
version = "1.1.1"

[[package]]
category = "main"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
name = "marshmallow"
optional = false
python-versions = ">=3.5"
version = "3.6.0"

[package.extras]
dev = ["pytest", "pytz", "simplejson", "mypy (0.770)", "flake8 (3.7.9)", "flake8-bugbear (20.1.4)", "pre-commit (>=1.20,<3.0)", "tox"]
docs = ["sphinx (3.0.3)", "sphinx-issues (1.2.0)", "alabaster (0.7.12)", "sphinx-version-warning (1.1.2)"]
lint = ["mypy (0.770)", "flake8 (3.7.9)", "flake8-bugbear (20.1.4)", "pre-commit (>=1.20,<3.0)"]
tests = ["pytest", "pytz", "simplejson"]

[[package]]
category = "dev"
description = "More routines for operating on iterables, beyond itertools"
name = "more-itertools"
optional = false
python-versions = ">=3.5"
version = "8.3.0"

[[package]]
category = "main"
description = "NumPy is the fundamental package for array computing with Python."
name = "numpy"
optional = false
python-versions = ">=3.5"
version = "1.18.4"

[[package]]
category = "main"
description = ""
name = "internal-package"
optional = false
python-versions = ">=3.6,<4.0"
version = "0.1.29"

[package.dependencies]
click = ">=7.0,<8.0"
colorama = ">=0.4.1,<0.5.0"
environs = ">=6.0.0,<7.0.0"
flask = ">=1.1.1,<2.0.0"
flask-restx = ">=0.2.0,<0.3.0"
jinja2 = ">=2.10.3,<3.0.0"
pygments = ">=2.4.2,<3.0.0"
redis = ">=3.3.8,<4.0.0"
schema = ">=0.7.1,<0.8.0"
toml = ">=0.10.0,<0.11.0"
virtualenv = ">=16.7.9,<17.0.0"
werkzeug = "0.16.0"

[package.dependencies.celery]
extras = ["redis"]
version = ">=4.3.0,<5.0.0"

[package.source]
reference = "artifactory"
url = "https://pypi.example.com/simple"

[[package]]
category = "dev"
description = "Core utilities for Python packages"
name = "packaging"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "20.3"

[package.dependencies]
pyparsing = ">=2.0.2"
six = "*"

[[package]]
category = "main"
description = "Powerful data structures for data analysis, time series, and statistics"
name = "pandas"
optional = false
python-versions = ">=3.6.1"
version = "1.0.3"

[package.dependencies]
numpy = ">=1.13.3"
python-dateutil = ">=2.6.1"
pytz = ">=2017.2"

[package.extras]
test = ["pytest (>=4.0.2)", "pytest-xdist", "hypothesis (>=3.58)"]

[[package]]
category = "dev"
description = "plugin and hook calling mechanisms for python"
name = "pluggy"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "0.13.1"

[package.dependencies]
[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
dev = ["pre-commit", "tox"]

[[package]]
category = "dev"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
name = "py"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.8.1"

[[package]]
category = "main"
description = "Pygments is a syntax highlighting package written in Python."
name = "pygments"
optional = false
python-versions = ">=3.5"
version = "2.6.1"

[[package]]
category = "dev"
description = "Python parsing module"
name = "pyparsing"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "2.4.7"

[[package]]
category = "main"
description = "Persistent/Functional/Immutable data structures"
name = "pyrsistent"
optional = false
python-versions = "*"
version = "0.16.0"

[package.dependencies]
six = "*"

[[package]]
category = "dev"
description = "pytest: simple powerful testing with Python"
name = "pytest"
optional = false
python-versions = ">=3.5"
version = "5.4.2"

[package.dependencies]
atomicwrites = ">=1.0"
attrs = ">=17.4.0"
colorama = "*"
more-itertools = ">=4.0.0"
packaging = "*"
pluggy = ">=0.12,<1.0"
py = ">=1.5.0"
wcwidth = "*"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
checkqa-mypy = ["mypy (v0.761)"]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
category = "main"
description = "Extensions to the standard Python datetime module"
name = "python-dateutil"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
version = "2.8.1"

[package.dependencies]
six = ">=1.5"

[[package]]
category = "main"
description = "Add .env support to your django/flask apps in development and deployments"
name = "python-dotenv"
optional = false
python-versions = "*"
version = "0.13.0"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
category = "main"
description = "World timezone definitions, modern and historical"
name = "pytz"
optional = false
python-versions = "*"
version = "2020.1"

[[package]]
category = "main"
description = "Python client for Redis key-value store"
name = "redis"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "3.5.2"

[package.extras]
hiredis = ["hiredis (>=0.1.3)"]

[[package]]
category = "main"
description = "Simple data validation library"
name = "schema"
optional = false
python-versions = "*"
version = "0.7.2"

[package.dependencies]
contextlib2 = ">=0.5.5"

[[package]]
category = "main"
description = "Python 2 and 3 compatibility utilities"
name = "six"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
version = "1.14.0"

[[package]]
category = "main"
description = "Python Library for Tom's Obvious, Minimal Language"
name = "toml"
optional = false
python-versions = "*"
version = "0.10.1"

[[package]]
category = "main"
description = "Promises, promises, promises."
name = "vine"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.3.0"

[[package]]
category = "main"
description = "Virtual Python Environment builder"
name = "virtualenv"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"
version = "16.7.10"

[package.extras]
docs = ["sphinx (>=1.8.0,<2)", "towncrier (>=18.5.0)", "sphinx-rtd-theme (>=0.4.2,<1)"]
testing = ["pytest (>=4.0.0,<5)", "coverage (>=4.5.0,<5)", "pytest-timeout (>=1.3.0,<2)", "six (>=1.10.0,<2)", "pytest-xdist", "pytest-localserver", "pypiserver", "mock", "xonsh"]

[[package]]
category = "dev"
description = "Measures number of Terminal column cells of wide-character codes"
name = "wcwidth"
optional = false
python-versions = "*"
version = "0.1.9"

[[package]]
category = "main"
description = "The comprehensive WSGI web application library."
name = "werkzeug"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "0.16.0"

[package.extras]
dev = ["pytest", "coverage", "tox", "sphinx", "pallets-sphinx-themes", "sphinx-issues"]
termcolor = ["termcolor"]
watchdog = ["watchdog"]

[[package]]
category = "main"
description = "Backport of pathlib-compatible object wrapper for zip files"
marker = "python_version < \"3.8\""
name = "zipp"
optional = false
python-versions = ">=3.6"
version = "3.1.0"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["jaraco.itertools", "func-timeout"]

[metadata]
content-hash = "86bcc9779b28985bf3850a8e19b3584f998d75fa7c7d2195f8cd636ceb64a58c"
python-versions = "^3.6.1"

[metadata.files]
amqp = [
    {file = "amqp-2.5.2-py2.py3-none-any.whl", hash = "sha256:6e649ca13a7df3faacdc8bbb280aa9a6602d22fd9d545336077e573a1f4ff3b8"},
    {file = "amqp-2.5.2.tar.gz", hash = "sha256:77f1aef9410698d20eaeac5b73a87817365f457a507d82edf292e12cbb83b08d"},
]
aniso8601 = [
    {file = "aniso8601-8.0.0-py2.py3-none-any.whl", hash = "sha256:c033f63d028b9a58e3ab0c2c7d0532ab4bfa7452bfc788fbfe3ddabd327b181a"},
    {file = "aniso8601-8.0.0.tar.gz", hash = "sha256:529dcb1f5f26ee0df6c0a1ee84b7b27197c3c50fc3a6321d66c544689237d072"},
]
atomicwrites = [
    {file = "atomicwrites-1.4.0-py2.py3-none-any.whl", hash = "sha256:6d1784dea7c0c8d4a5172b6c620f40b6e4cbfdf96d783691f2e1302a7b88e197"},
    {file = "atomicwrites-1.4.0.tar.gz", hash = "sha256:ae70396ad1a434f9c7046fd2dd196fc04b12f9e91ffb859164193be8b6168a7a"},
]
attrs = [
    {file = "attrs-19.3.0-py2.py3-none-any.whl", hash = "sha256:08a96c641c3a74e44eb59afb61a24f2cb9f4d7188748e76ba4bb5edfa3cb7d1c"},
    {file = "attrs-19.3.0.tar.gz", hash = "sha256:f7b7ce16570fe9965acd6d30101a28f62fb4a7f9e926b3bbc9b61f8b04247e72"},
]
billiard = [
    {file = "billiard-3.6.3.0-py3-none-any.whl", hash = "sha256:bff575450859a6e0fbc2f9877d9b715b0bbc07c3565bb7ed2280526a0cdf5ede"},
    {file = "billiard-3.6.3.0.tar.gz", hash = "sha256:d91725ce6425f33a97dfa72fb6bfef0e47d4652acd98a032bd1a7fbf06d5fa6a"},
]
celery = [
    {file = "celery-4.4.2-py2.py3-none-any.whl", hash = "sha256:5b4b37e276033fe47575107a2775469f0b721646a08c96ec2c61531e4fe45f2a"},
    {file = "celery-4.4.2.tar.gz", hash = "sha256:108a0bf9018a871620936c33a3ee9f6336a89f8ef0a0f567a9001f4aa361415f"},
]
click = [
    {file = "click-7.1.2-py2.py3-none-any.whl", hash = "sha256:dacca89f4bfadd5de3d7489b7c8a566eee0d3676333fbb50030263894c38c0dc"},
    {file = "click-7.1.2.tar.gz", hash = "sha256:d2b5255c7c6349bc1bd1e59e08cd12acbbd63ce649f2588755783aa94dfb6b1a"},
]
colorama = [
    {file = "colorama-0.4.3-py2.py3-none-any.whl", hash = "sha256:7d73d2a99753107a36ac6b455ee49046802e59d9d076ef8e47b61499fa29afff"},
    {file = "colorama-0.4.3.tar.gz", hash = "sha256:e96da0d330793e2cb9485e9ddfd918d456036c7149416295932478192f4436a1"},
]
contextlib2 = [
    {file = "contextlib2-0.6.0.post1-py2.py3-none-any.whl", hash = "sha256:3355078a159fbb44ee60ea80abd0d87b80b78c248643b49aa6d94673b413609b"},
    {file = "contextlib2-0.6.0.post1.tar.gz", hash = "sha256:01f490098c18b19d2bd5bb5dc445b2054d2fa97f09a4280ba2c5f3c394c8162e"},
]
environs = [
    {file = "environs-6.1.0-py2.py3-none-any.whl", hash = "sha256:534191fc32cc0c8142be8648a3c6b3f0eab1592e99a26be44e476970c12129f6"},
    {file = "environs-6.1.0.tar.gz", hash = "sha256:7dc84645d544d72d357fbd29b3e1bb1650931a7949b7353d46a9e823a6dffafc"},
]
flask = [
    {file = "Flask-1.1.2-py2.py3-none-any.whl", hash = "sha256:8a4fdd8936eba2512e9c85df320a37e694c93945b33ef33c89946a340a238557"},
    {file = "Flask-1.1.2.tar.gz", hash = "sha256:4efa1ae2d7c9865af48986de8aeb8504bf32c7f3d6fdc9353d34b21f4b127060"},
]
flask-restx = [
    {file = "flask-restx-0.2.0.tar.gz", hash = "sha256:ca87a1808333f4ec5a50a5740b44e6cd3879a4b940d559df3996877ec4a2f2a5"},
    {file = "flask_restx-0.2.0-py2.py3-none-any.whl", hash = "sha256:a1653da19ca0b5e5c2ea59bd5f4639a7749e6a9b882f459de1814ed37872253b"},
]
importlib-metadata = [
    {file = "importlib_metadata-1.6.0-py2.py3-none-any.whl", hash = "sha256:2a688cbaa90e0cc587f1df48bdc97a6eadccdcd9c35fb3f976a09e3b5016d90f"},
    {file = "importlib_metadata-1.6.0.tar.gz", hash = "sha256:34513a8a0c4962bc66d35b359558fd8a5e10cd472d37aec5f66858addef32c1e"},
]
itsdangerous = [
    {file = "itsdangerous-1.1.0-py2.py3-none-any.whl", hash = "sha256:b12271b2047cb23eeb98c8b5622e2e5c5e9abd9784a153e9d8ef9cb4dd09d749"},
    {file = "itsdangerous-1.1.0.tar.gz", hash = "sha256:321b033d07f2a4136d3ec762eac9f16a10ccd60f53c0c91af90217ace7ba1f19"},
]
jinja2 = [
    {file = "Jinja2-2.11.2-py2.py3-none-any.whl", hash = "sha256:f0a4641d3cf955324a89c04f3d94663aa4d638abe8f733ecd3582848e1c37035"},
    {file = "Jinja2-2.11.2.tar.gz", hash = "sha256:89aab215427ef59c34ad58735269eb58b1a5808103067f7bb9d5836c651b3bb0"},
]
jsonschema = [
    {file = "jsonschema-3.2.0-py2.py3-none-any.whl", hash = "sha256:4e5b3cf8216f577bee9ce139cbe72eca3ea4f292ec60928ff24758ce626cd163"},
    {file = "jsonschema-3.2.0.tar.gz", hash = "sha256:c8a85b28d377cc7737e46e2d9f2b4f44ee3c0e1deac6bf46ddefc7187d30797a"},
]
kombu = [
    {file = "kombu-4.6.8-py2.py3-none-any.whl", hash = "sha256:598e7e749d6ab54f646b74b2d2df67755dee13894f73ab02a2a9feb8870c7cb2"},
    {file = "kombu-4.6.8.tar.gz", hash = "sha256:2d1cda774126a044d91a7ff5fa6d09edf99f46924ab332a810760fe6740e9b76"},
]
markupsafe = [
    {file = "MarkupSafe-1.1.1-cp27-cp27m-macosx_10_6_intel.whl", hash = "sha256:09027a7803a62ca78792ad89403b1b7a73a01c8cb65909cd876f7fcebd79b161"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-manylinux1_i686.whl", hash = "sha256:e249096428b3ae81b08327a63a485ad0878de3fb939049038579ac0ef61e17e7"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-manylinux1_x86_64.whl", hash = "sha256:500d4957e52ddc3351cabf489e79c91c17f6e0899158447047588650b5e69183"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-win32.whl", hash = "sha256:b2051432115498d3562c084a49bba65d97cf251f5a331c64a12ee7e04dacc51b"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-win_amd64.whl", hash = "sha256:98c7086708b163d425c67c7a91bad6e466bb99d797aa64f965e9d25c12111a5e"},
    {file = "MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_i686.whl", hash = "sha256:cd5df75523866410809ca100dc9681e301e3c27567cf498077e8551b6d20e42f"},
    {file = "MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:43a55c2930bbc139570ac2452adf3d70cdbb3cfe5912c71cdce1c2c6bbd9c5d1"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-macosx_10_6_intel.whl", hash = "sha256:1027c282dad077d0bae18be6794e6b6b8c91d58ed8a8d89a89d59693b9131db5"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-manylinux1_i686.whl", hash = "sha256:62fe6c95e3ec8a7fad637b7f3d372c15ec1caa01ab47926cfdf7a75b40e0eac1"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-manylinux1_x86_64.whl", hash = "sha256:88e5fcfb52ee7b911e8bb6d6aa2fd21fbecc674eadd44118a9cc3863f938e735"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-win32.whl", hash = "sha256:ade5e387d2ad0d7ebf59146cc00c8044acbd863725f887353a10df825fc8ae21"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-win_amd64.whl", hash = "sha256:09c4b7f37d6c648cb13f9230d847adf22f8171b1ccc4d5682398e77f40309235"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-macosx_10_6_intel.whl", hash = "sha256:79855e1c5b8da654cf486b830bd42c06e8780cea587384cf6545b7d9ac013a0b"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-manylinux1_i686.whl", hash = "sha256:c8716a48d94b06bb3b2524c2b77e055fb313aeb4ea620c8dd03a105574ba704f"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-manylinux1_x86_64.whl", hash = "sha256:7c1699dfe0cf8ff607dbdcc1e9b9af1755371f92a68f706051cc8c37d447c905"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-win32.whl", hash = "sha256:6dd73240d2af64df90aa7c4e7481e23825ea70af4b4922f8ede5b9e35f78a3b1"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-win_amd64.whl", hash = "sha256:9add70b36c5666a2ed02b43b335fe19002ee5235efd4b8a89bfcf9005bebac0d"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-macosx_10_6_intel.whl", hash = "sha256:24982cc2533820871eba85ba648cd53d8623687ff11cbb805be4ff7b4c971aff"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:00bc623926325b26bb9605ae9eae8a215691f33cae5df11ca5424f06f2d1f473"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:717ba8fe3ae9cc0006d7c451f0bb265ee07739daf76355d06366154ee68d221e"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-win32.whl", hash = "sha256:535f6fc4d397c1563d08b88e485c3496cf5784e927af890fb3c3aac7f933ec66"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-win_amd64.whl", hash = "sha256:b1282f8c00509d99fef04d8ba936b156d419be841854fe901d8ae224c59f0be5"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-macosx_10_6_intel.whl", hash = "sha256:8defac2f2ccd6805ebf65f5eeb132adcf2ab57aa11fdf4c0dd5169a004710e7d"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:46c99d2de99945ec5cb54f23c8cd5689f6d7177305ebff350a58ce5f8de1669e"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:ba59edeaa2fc6114428f1637ffff42da1e311e29382d81b339c1817d37ec93c6"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-win32.whl", hash = "sha256:b00c1de48212e4cc9603895652c5c410df699856a2853135b3967591e4beebc2"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-win_amd64.whl", hash = "sha256:9bf40443012702a1d2070043cb6291650a0841ece432556f784f004937f0f32c"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:6788b695d50a51edb699cb55e35487e430fa21f1ed838122d722e0ff0ac5ba15"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-manylinux1_i686.whl", hash = "sha256:cdb132fc825c38e1aeec2c8aa9338310d29d337bebbd7baa06889d09a60a1fa2"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:13d3144e1e340870b25e7b10b98d779608c02016d5184cfb9927a9f10c689f42"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-win32.whl", hash = "sha256:596510de112c685489095da617b5bcbbac7dd6384aeebeda4df6025d0256a81b"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-win_amd64.whl", hash = "sha256:e8313f01ba26fbbe36c7be1966a7b7424942f670f38e666995b88d012765b9be"},
    {file = "MarkupSafe-1.1.1.tar.gz", hash = "sha256:29872e92839765e546828bb7754a68c418d927cd064fd4708fab9fe9c8bb116b"},
]
marshmallow = [
    {file = "marshmallow-3.6.0-py2.py3-none-any.whl", hash = "sha256:f88fe96434b1f0f476d54224d59333eba8ca1a203a2695683c1855675c4049a7"},
    {file = "marshmallow-3.6.0.tar.gz", hash = "sha256:c2673233aa21dde264b84349dc2fd1dce5f30ed724a0a00e75426734de5b84ab"},
]
more-itertools = [
    {file = "more-itertools-8.3.0.tar.gz", hash = "sha256:558bb897a2232f5e4f8e2399089e35aecb746e1f9191b6584a151647e89267be"},
    {file = "more_itertools-8.3.0-py3-none-any.whl", hash = "sha256:7818f596b1e87be009031c7653d01acc46ed422e6656b394b0f765ce66ed4982"},
]
numpy = [
    {file = "numpy-1.18.4-cp35-cp35m-macosx_10_9_intel.whl", hash = "sha256:efdba339fffb0e80fcc19524e4fdbda2e2b5772ea46720c44eaac28096d60720"},
    {file = "numpy-1.18.4-cp35-cp35m-manylinux1_i686.whl", hash = "sha256:2b573fcf6f9863ce746e4ad00ac18a948978bb3781cffa4305134d31801f3e26"},
    {file = "numpy-1.18.4-cp35-cp35m-manylinux1_x86_64.whl", hash = "sha256:3f0dae97e1126f529ebb66f3c63514a0f72a177b90d56e4bce8a0b5def34627a"},
    {file = "numpy-1.18.4-cp35-cp35m-win32.whl", hash = "sha256:dccd380d8e025c867ddcb2f84b439722cf1f23f3a319381eac45fd077dee7170"},
    {file = "numpy-1.18.4-cp35-cp35m-win_amd64.whl", hash = "sha256:02ec9582808c4e48be4e93cd629c855e644882faf704bc2bd6bbf58c08a2a897"},
    {file = "numpy-1.18.4-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:904b513ab8fbcbdb062bed1ce2f794ab20208a1b01ce9bd90776c6c7e7257032"},
    {file = "numpy-1.18.4-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:e22cd0f72fc931d6abc69dc7764484ee20c6a60b0d0fee9ce0426029b1c1bdae"},
    {file = "numpy-1.18.4-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:2466fbcf23711ebc5daa61d28ced319a6159b260a18839993d871096d66b93f7"},
    {file = "numpy-1.18.4-cp36-cp36m-win32.whl", hash = "sha256:00d7b54c025601e28f468953d065b9b121ddca7fff30bed7be082d3656dd798d"},
    {file = "numpy-1.18.4-cp36-cp36m-win_amd64.whl", hash = "sha256:7d59f21e43bbfd9a10953a7e26b35b6849d888fc5a331fa84a2d9c37bd9fe2a2"},
    {file = "numpy-1.18.4-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:efb7ac5572c9a57159cf92c508aad9f856f1cb8e8302d7fdb99061dbe52d712c"},
    {file = "numpy-1.18.4-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:0e6f72f7bb08f2f350ed4408bb7acdc0daba637e73bce9f5ea2b207039f3af88"},
    {file = "numpy-1.18.4-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:9933b81fecbe935e6a7dc89cbd2b99fea1bf362f2790daf9422a7bb1dc3c3085"},
    {file = "numpy-1.18.4-cp37-cp37m-win32.whl", hash = "sha256:96dd36f5cdde152fd6977d1bbc0f0561bccffecfde63cd397c8e6033eb66baba"},
    {file = "numpy-1.18.4-cp37-cp37m-win_amd64.whl", hash = "sha256:57aea170fb23b1fd54fa537359d90d383d9bf5937ee54ae8045a723caa5e0961"},
    {file = "numpy-1.18.4-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ed722aefb0ebffd10b32e67f48e8ac4c5c4cf5d3a785024fdf0e9eb17529cd9d"},
    {file = "numpy-1.18.4-cp38-cp38-manylinux1_i686.whl", hash = "sha256:50fb72bcbc2cf11e066579cb53c4ca8ac0227abb512b6cbc1faa02d1595a2a5d"},
    {file = "numpy-1.18.4-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:709c2999b6bd36cdaf85cf888d8512da7433529f14a3689d6e37ab5242e7add5"},
    {file = "numpy-1.18.4-cp38-cp38-win32.whl", hash = "sha256:f22273dd6a403ed870207b853a856ff6327d5cbce7a835dfa0645b3fc00273ec"},
    {file = "numpy-1.18.4-cp38-cp38-win_amd64.whl", hash = "sha256:1be2e96314a66f5f1ce7764274327fd4fb9da58584eaff00b5a5221edefee7d6"},
    {file = "numpy-1.18.4.zip", hash = "sha256:bbcc85aaf4cd84ba057decaead058f43191cc0e30d6bc5d44fe336dc3d3f4509"},
]
internal-package = [
    {file = "internal-package-0.1.29.tar.gz", hash = "md5:0dbf8eef0f6c81e42d4acc2e736802b1"},
    {file = "internal_package-0.1.29-py3-none-any.whl", hash = "md5:5b99ed26ba6e3902f0b3bfc8406d9dda"},
]
packaging = [
    {file = "packaging-20.3-py2.py3-none-any.whl", hash = "sha256:82f77b9bee21c1bafbf35a84905d604d5d1223801d639cf3ed140bd651c08752"},
    {file = "packaging-20.3.tar.gz", hash = "sha256:3c292b474fda1671ec57d46d739d072bfd495a4f51ad01a055121d81e952b7a3"},
]
pandas = [
    {file = "pandas-1.0.3-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:d234bcf669e8b4d6cbcd99e3ce7a8918414520aeb113e2a81aeb02d0a533d7f7"},
    {file = "pandas-1.0.3-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:ca84a44cf727f211752e91eab2d1c6c1ab0f0540d5636a8382a3af428542826e"},
    {file = "pandas-1.0.3-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:1fa4bae1a6784aa550a1c9e168422798104a85bf9c77a1063ea77ee6f8452e3a"},
    {file = "pandas-1.0.3-cp36-cp36m-win32.whl", hash = "sha256:863c3e4b7ae550749a0bb77fa22e601a36df9d2905afef34a6965bed092ba9e5"},
    {file = "pandas-1.0.3-cp36-cp36m-win_amd64.whl", hash = "sha256:a210c91a02ec5ff05617a298ad6f137b9f6f5771bf31f2d6b6367d7f71486639"},
    {file = "pandas-1.0.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:11c7cb654cd3a0e9c54d81761b5920cdc86b373510d829461d8f2ed6d5905266"},
    {file = "pandas-1.0.3-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:6597df07ea361231e60c00692d8a8099b519ed741c04e65821e632bc9ccb924c"},
    {file = "pandas-1.0.3-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:743bba36e99d4440403beb45a6f4f3a667c090c00394c176092b0b910666189b"},
    {file = "pandas-1.0.3-cp37-cp37m-win32.whl", hash = "sha256:07c1b58936b80eafdfe694ce964ac21567b80a48d972879a359b3ebb2ea76835"},
    {file = "pandas-1.0.3-cp37-cp37m-win_amd64.whl", hash = "sha256:12f492dd840e9db1688126216706aa2d1fcd3f4df68a195f9479272d50054645"},
    {file = "pandas-1.0.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:0ebe327fb088df4d06145227a4aa0998e4f80a9e6aed4b61c1f303bdfdf7c722"},
    {file = "pandas-1.0.3-cp38-cp38-manylinux1_i686.whl", hash = "sha256:858a0d890d957ae62338624e4aeaf1de436dba2c2c0772570a686eaca8b4fc85"},
    {file = "pandas-1.0.3-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:387dc7b3c0424327fe3218f81e05fc27832772a5dffbed385013161be58df90b"},
    {file = "pandas-1.0.3-cp38-cp38-win32.whl", hash = "sha256:167a1315367cea6ec6a5e11e791d9604f8e03f95b57ad227409de35cf850c9c5"},
    {file = "pandas-1.0.3-cp38-cp38-win_amd64.whl", hash = "sha256:1a7c56f1df8d5ad8571fa251b864231f26b47b59cbe41aa5c0983d17dbb7a8e4"},
    {file = "pandas-1.0.3.tar.gz", hash = "sha256:32f42e322fb903d0e189a4c10b75ba70d90958cc4f66a1781ed027f1a1d14586"},
]
pluggy = [
    {file = "pluggy-0.13.1-py2.py3-none-any.whl", hash = "sha256:966c145cd83c96502c3c3868f50408687b38434af77734af1e9ca461a4081d2d"},
    {file = "pluggy-0.13.1.tar.gz", hash = "sha256:15b2acde666561e1298d71b523007ed7364de07029219b604cf808bfa1c765b0"},
]
py = [
    {file = "py-1.8.1-py2.py3-none-any.whl", hash = "sha256:c20fdd83a5dbc0af9efd622bee9a5564e278f6380fffcacc43ba6f43db2813b0"},
    {file = "py-1.8.1.tar.gz", hash = "sha256:5e27081401262157467ad6e7f851b7aa402c5852dbcb3dae06768434de5752aa"},
]
pygments = [
    {file = "Pygments-2.6.1-py3-none-any.whl", hash = "sha256:ff7a40b4860b727ab48fad6360eb351cc1b33cbf9b15a0f689ca5353e9463324"},
    {file = "Pygments-2.6.1.tar.gz", hash = "sha256:647344a061c249a3b74e230c739f434d7ea4d8b1d5f3721bc0f3558049b38f44"},
]
pyparsing = [
    {file = "pyparsing-2.4.7-py2.py3-none-any.whl", hash = "sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b"},
    {file = "pyparsing-2.4.7.tar.gz", hash = "sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1"},
]
pyrsistent = [
    {file = "pyrsistent-0.16.0.tar.gz", hash = "sha256:28669905fe725965daa16184933676547c5bb40a5153055a8dee2a4bd7933ad3"},
]
pytest = [
    {file = "pytest-5.4.2-py3-none-any.whl", hash = "sha256:95c710d0a72d91c13fae35dce195633c929c3792f54125919847fdcdf7caa0d3"},
    {file = "pytest-5.4.2.tar.gz", hash = "sha256:eb2b5e935f6a019317e455b6da83dd8650ac9ffd2ee73a7b657a30873d67a698"},
]
python-dateutil = [
    {file = "python-dateutil-2.8.1.tar.gz", hash = "sha256:73ebfe9dbf22e832286dafa60473e4cd239f8592f699aa5adaf10050e6e1823c"},
    {file = "python_dateutil-2.8.1-py2.py3-none-any.whl", hash = "sha256:75bb3f31ea686f1197762692a9ee6a7550b59fc6ca3a1f4b5d7e32fb98e2da2a"},
]
python-dotenv = [
    {file = "python-dotenv-0.13.0.tar.gz", hash = "sha256:3b9909bc96b0edc6b01586e1eed05e71174ef4e04c71da5786370cebea53ad74"},
    {file = "python_dotenv-0.13.0-py2.py3-none-any.whl", hash = "sha256:25c0ff1a3e12f4bde8d592cc254ab075cfe734fc5dd989036716fd17ee7e5ec7"},
]
pytz = [
    {file = "pytz-2020.1-py2.py3-none-any.whl", hash = "sha256:a494d53b6d39c3c6e44c3bec237336e14305e4f29bbf800b599253057fbb79ed"},
    {file = "pytz-2020.1.tar.gz", hash = "sha256:c35965d010ce31b23eeb663ed3cc8c906275d6be1a34393a1d73a41febf4a048"},
]
redis = [
    {file = "redis-3.5.2-py2.py3-none-any.whl", hash = "sha256:2ef11f489003f151777c064c5dbc6653dfb9f3eade159bcadc524619fddc2242"},
    {file = "redis-3.5.2.tar.gz", hash = "sha256:6d65e84bc58091140081ee9d9c187aab0480097750fac44239307a3bdf0b1251"},
]
schema = [
    {file = "schema-0.7.2-py2.py3-none-any.whl", hash = "sha256:3a03c2e2b22e6a331ae73750ab1da46916da6ca861b16e6f073ac1d1eba43b71"},
    {file = "schema-0.7.2.tar.gz", hash = "sha256:b536f2375b49fdf56f36279addae98bd86a8afbd58b3c32ce363c464bed5fc1c"},
]
six = [
    {file = "six-1.14.0-py2.py3-none-any.whl", hash = "sha256:8f3cd2e254d8f793e7f3d6d9df77b92252b52637291d0f0da013c76ea2724b6c"},
    {file = "six-1.14.0.tar.gz", hash = "sha256:236bdbdce46e6e6a3d61a337c0f8b763ca1e8717c03b369e87a7ec7ce1319c0a"},
]
toml = [
    {file = "toml-0.10.1-py2.py3-none-any.whl", hash = "sha256:bda89d5935c2eac546d648028b9901107a595863cb36bae0c73ac804a9b4ce88"},
    {file = "toml-0.10.1.tar.gz", hash = "sha256:926b612be1e5ce0634a2ca03470f95169cf16f939018233a670519cb4ac58b0f"},
]
vine = [
    {file = "vine-1.3.0-py2.py3-none-any.whl", hash = "sha256:ea4947cc56d1fd6f2095c8d543ee25dad966f78692528e68b4fada11ba3f98af"},
    {file = "vine-1.3.0.tar.gz", hash = "sha256:133ee6d7a9016f177ddeaf191c1f58421a1dcc6ee9a42c58b34bed40e1d2cd87"},
]
virtualenv = [
    {file = "virtualenv-16.7.10-py2.py3-none-any.whl", hash = "sha256:105893c8dc66b7817691c7371439ec18e3b6c5e323a304b5ed96cdd2e75cc1ec"},
    {file = "virtualenv-16.7.10.tar.gz", hash = "sha256:e88fdcb08b0ecb11da97868f463dd06275923f50d87f4b9c8b2fc0994eec40f4"},
]
wcwidth = [
    {file = "wcwidth-0.1.9-py2.py3-none-any.whl", hash = "sha256:cafe2186b3c009a04067022ce1dcd79cb38d8d65ee4f4791b8888d6599d1bbe1"},
    {file = "wcwidth-0.1.9.tar.gz", hash = "sha256:ee73862862a156bf77ff92b09034fc4825dd3af9cf81bc5b360668d425f3c5f1"},
]
werkzeug = [
    {file = "Werkzeug-0.16.0-py2.py3-none-any.whl", hash = "sha256:e5f4a1f98b52b18a93da705a7458e55afb26f32bff83ff5d19189f92462d65c4"},
    {file = "Werkzeug-0.16.0.tar.gz", hash = "sha256:7280924747b5733b246fe23972186c6b348f9ae29724135a6dfc1e53cea433e7"},
]
zipp = [
    {file = "zipp-3.1.0-py3-none-any.whl", hash = "sha256:aa36550ff0c0b7ef7fa639055d797116ee891440eac1a56f378e2d3179e0320b"},
    {file = "zipp-3.1.0.tar.gz", hash = "sha256:c599e4d75c98f6798c509911d08a22e6c021d074469042177c8c86fb92eefd96"},
]
```

# Versions

```json
dephell inspect self
{
  "cache": "0b",
  "path": "/home/adawalli/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell",
  "python": "/home/adawalli/.local/share/dephell/venvs/dephell/bin/python3",
  "version": "0.8.3",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.7",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.2",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

From what I can tell, this is where the `type` key is being requesteds: https://github.com/dephell/dephell/blob/v.0.8.3/dephell/converters/poetrylock.py#L120

but, as you can see the `source` dict only has a `reference` key and a `url` key

```python
{'category': 'main', 'description': '', 'name': 'internal-package, 'optional': <tomlkit.items.Bool object at 0x7fe918046c18>, 'python-versions': '>=3.6,<4.0', 'version': '0.1.29', 'dependencies': {'click': '>=7.0,<8.0', 'colorama': '>=0.4.1,<0.5.0', 'environs': '>=6.0.0,<7.0.0', 'flask': '>=1.1.1,<2.0.0', 'flask-restx': '>=0.2.0,<0.3.0', 'jinja2': '>=2.10.3,<3.0.0', 'pygments': '>=2.4.2,<3.0.0', 'redis': '>=3.3.8,<4.0.0', 'schema': '>=0.7.1,<0.8.0', 'toml': '>=0.10.0,<0.11.0', 'virtualenv': '>=16.7.9,<17.0.0', 'werkzeug': '0.16.0', 'celery': {'extras': ['redis'], 'version': '>=4.3.0,<5.0.0'}}, 'source': {'reference': 'artifactory', 'url': 'https://pypi.example.com/simple'}}
```

 More types
 
 Fix issue with not expanding home paths
 # Fix expanding ~ (`$HOME`) in file path
Fixes issue #237 

## Problem
When using a path with the `$HOME` parameter `~`, this won't get expanded and will reference to the current directory.

## Solution
Update the config builder with an additional script to expand the user path for all received filepaths.
Yeah, I had that issue also in mind, but could not find a decent way to tackle that problem.

The current solution takes care of all the command line inputs and sanitizes them as early as possible in the code.
I tried to find another point, where I can update those values, but it seems, that the best option for that would be the command itself. I'm not sure if there is another option to handle all path variables at once because they were 'only' parsed from the file as strings and there is no information what's supposed to be a path and what a string.

At the moment I started adding some code in the command classes (at the moment focusing on the `commands/deps_convert.py` file.

Would it be a good solution, to keep the path handling for CLI in the builder class and update commands according to that?
I want to prevent dephell from altering a configuration during the conversion process and introducing absolute paths where relative paths with the `$HOME` variable were used before.

 Fix wheel generation
 # Wheel Generation for Packages with src folder
Fixes issue #391 

## Problem
Packages containing a **src** folder above the package folder won't have a working wheel package when building the packages with `dephell build`

## Solution
Appending the found package dir to the project package path enables the converter to generate a working wheel package for packages with a **src** folder as well as for packages without one (when there is no **src** folder, this parameter contains the value `'.'` )

## Misc

Also fixed a typo in the *project_build* file.
Oh, I totally missed that one :open_mouth: 

Updated the retrieval of the key from the dict with using the `get(...)` method and a default value.

 `dephell deps add flake8` not working - `AttributeError: 'ParsedRequirement' object has no attribute 'req'`
 ## Short description

<!-- Thank you for your feedback! Please, fill the sections below to help us to solve the issue. -->

## Output

```
AttributeError: 'ParsedRequirement' object has no attribute 'req'
```

When enabling debugging:

```
 dephell deps add --level=DEBUG --traceback cowsay

# This is the `req.__dict__`
{'requirement': 'cowsay', 'is_editable': False, 'comes_from': '-r /var/folders/kp/06ys69nn6hq9k23cv0xxn19m0000gn/T/tmpyvleag9y (line 1)', 'options': {}, 'constraint': False, 'line_source': 'line 1 of /var/folders/kp/06ys69nn6hq9k23cv0xxn19m0000gn/T/tmpyvleag9y'}

ERROR AttributeError: 'ParsedRequirement' object has no attribute 'req'
Traceback (most recent call last):
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/cli.py", line 66, in main
    result = handler()
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/commands/deps_add.py", line 39, in __call__
    new_resolver = get_resolver(reqs=self.args.name)
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/actions/_package.py", line 25, in get_resolver
    resolver = PIPConverter(lock=False).loads_resolver('\n'.join(reqs))
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/converters/base.py", line 90, in loads_resolver
    root = self.loads(content)
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/converters/base.py", line 42, in loads
    root = self.load(path=stream.name)
  File "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell/converters/pip.py", line 99, in load
    if req.req is None:

AttributeError: 'ParsedRequirement' object has no attribute 'req'
```

## Steps to reproduce

```
poetry new project
dephell deps add flake8
```

## Traceback

<!-- If a command fails, run it with `--traceback` and attach output -->

```
...
```

## Config

<!-- Attach `cat pyproject.toml` output -->

```toml
[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}


```

# Versions

<!-- Attach `dephell inspect self` output -->

```json
{
  "cache": "947.48Kb",
  "path": "/Users/Vaughan/.local/lib/python3.8/site-packages/dephell",
  "python": "/Users/Vaughan/.pyenv/versions/3.8.1/bin/python3",
  "version": "0.8.3",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.2",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

Apparently you have 20+ version of pip which is incompatible with the latest version of dephell

@bugchecker thank you for your help! That's a good catch.

@vjpr please, install dephell via the official script (or via `pipsi` / `pipx`):
https://dephell.org/

Then it will be isolated and guaranteed to have compatible dependencies.

 Configuring dephell --env through pyproject.toml
 # Short description

Rather than configuring dephell from the command line I prefer to configure it in the pyproject.toml. While this is supported I found that I could not completely replace `dephell deps convert --env main --from Pipfile -- to requirements.txt` by  `dephell deps convert`.

## The expected behavior
*based on how I interpreted the documentation*
``` toml
[tool.dephell]
envs = 'main'
from = 'Pipfile'
to = 'requirements.txt'
```

I would like  `dephell deps convert` to work like `dephell deps convert --env main --from Pipfile -- to requirements.txt` with this configuration.

however if you try that you obtain `ERROR env `main` not found in config`

## Closest implemented behavior
I am aware that you can use 
``` toml
[tool.coverage.report]
show_missing = true
# fail_under = 80
exclude_lines = ["raise NotImplementedError", "[.]{3}"]

[tool.dephell]
envs = 'main'
from = 'Pipfile'
to = 'requirements.txt'
```
and run `dephell deps convert --env main` but since forgetting `--env main` would not return errors but would create the wrong requirements.txt this is undesired.

## Suggested behavior
Since the behavior described at `The expected behavior` might break backwards compatibility I'd suggest introducing an `only_envs` variable to the dephell configuration such that you can configure dephell in this way:
``` toml
[tool.dephell]
only_envs = ['main']
from = 'Pipfile'
to = 'requirements.txt'
```
 Fewer network requests
 Close #414
> orsinium changed the title "Less network requests" to "Fewer network requests"

:monocle_face: :gb: 

 Fix envs filtering in `deps convert`
 Close #384
 Custom CA bundles support
 Close #419
 test and fix `deps add`
 Close #421
 fix path resolving 4 register
 
 Fixes #425: `vendor download` doesn't do anything with private pypi
 Fix #425 
Thank you :)

 `dephell vendor download` silently fails to download anything from private pypi
 ## Short description

When using `dephell vendor download` with a private pypi repository, dependencies are correctly resolved, but no packages are downloaded. 
I've traced it down to the following issue:

`Release.version` is an instance of `packaging.Version`:
https://github.com/dephell/dephell/blob/6303f416018910668f1635b70cd828a2fd2b2d9e/dephell/models/release.py#L20

This `Version` object is passed to `WarehouseSimpleRepo.download()` in `_download_packages()` here:
https://github.com/dephell/dephell/blob/6303f416018910668f1635b70cd828a2fd2b2d9e/dephell/commands/vendor_download.py#L60

But `WarehouseSimpleRepo.download()` expects version as a `str` instead, because it compares it with the version string of the path: 
https://github.com/dephell/dephell/blob/6303f416018910668f1635b70cd828a2fd2b2d9e/dephell/repositories/_warehouse/_simple.py#L131

This causes no matching packages to be found and downloaded. The command completes though.

`WarehouseAPIRepo` doesn't suffer from this same bug, because it stringifies the `Version` object when it uses it to build the link:
https://github.com/dephell/dephell/blob/6303f416018910668f1635b70cd828a2fd2b2d9e/dephell/repositories/_warehouse/_api.py#L149
So I guess the `WarehouseSimpleRepo` should just do the same.

## Output

> dephell vendor download --env=vendorized
> INFO get dependencies (format=pip, path=requirements-vendorized.txt)
> INFO build dependencies graph...
> INFO downloading packages... (output=package/_vendor)
> INFO done! (packages=1)

But package/_vendor directory does not contain the vendored dependency.

## Steps to reproduce

requirements-vendorized.txt
```
-i ${PRIVATE_PYPI_URL}
private-package>=0.0.1,<1.0.0
```

```bash
$ dephell vendor download --env=vendorized
```

## Config

```toml
[tool.dephell.vendorized]
from = {format="pip", path="requirements-vendorized.txt"}

[tool.dephell.vendorized.vendor]
path = "package/_vendor"
```

# Versions

```json
{
  "cache": "322.51Kb",
  "path": ".../dephell/venvs/dephell/lib/python3.7/site-packages/dephell",
  "python": ".../dephell/venvs/dephell/bin/python3",
  "version": "0.8.2",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

 Add option to convert to multiple formats 
 ## Short description

<!-- Thank you for your feedback! Please, fill the sections below to help us to solve the issue. -->
Thanks for this project. It has made the process of using poetry whilst providing requirements.txt and setup.py that bit easier

Would it be possible to add the option to pass multiple output formats or files to? For example:
```bash
dephell deps convert --from=pyproject.toml --to=setup.py,requirements.txt
```

And support something similar in pyproject.toml. For example
```toml
[tool.dephell.main]
from = "pyproject.toml"
to = "setup.py,requirements.txtt"
```

Why?

Currently, in my projects I have to run the following to achieve this
```bash
dephell deps convert
dephell deps convert --from=pyproject.toml --to=setup.py
```

And this change would make for a small quality of life improvement

Thank you for your time
I think #188 will cover your case. What do you think?

Yeah, I guess so. If not feel free to re-open. Thank you for the request :)

It would. Thanks very much 😊

 Fix Converter.lock default value for subclasses
 Fix lock mechanism for converters with lock supports by default.

Now locking is not working for Pipfile.lock, poetry.lock and other. 

I have dephell==0.8.2 with dependecies in venv
```
aiofiles==0.5.0
aiohttp==3.6.2
appdirs==1.4.3
async-timeout==3.0.1
attrs==19.3.0
autopep8==1.5.2
bowler==0.8.0
Cerberus==1.3.2
certifi==2020.4.5.1
chardet==3.0.4
click==7.1.1
colorama==0.4.3
dephell==0.8.2
dephell-archive==0.1.6
dephell-argparse==0.1.2
dephell-changelogs==0.0.1
dephell-discover==0.2.10
dephell-licenses==0.1.6
dephell-links==0.1.5
dephell-markers==1.0.3
dephell-pythons==0.1.14
dephell-setuptools==0.2.3
dephell-shells==0.1.4
dephell-specifier==0.2.1
dephell-venvs==0.1.17
dephell-versioning==0.1.1
docker==4.2.0
dockerpty==0.4.1
docutils==0.16
fissix==19.2b1
graphviz==0.13.2
html5lib==1.0.1
idna==2.9
idna-ssl==1.1.0
Jinja2==2.11.2
m2r==0.2.1
MarkupSafe==1.1.1
mistune==0.8.4
multidict==4.7.5
packaging==20.3
pexpect==4.8.0
ptyprocess==0.6.0
pycodestyle==2.5.0
Pygments==2.6.1
pyparsing==2.4.7
python-gnupg==0.4.6
requests==2.23.0
ruamel.yaml==0.16.10
ruamel.yaml.clib==0.2.0
sh==1.12.14
shellingham==1.3.2
six==1.14.0
tabulate==0.8.7
tomlkit==0.6.0
typing-extensions==3.7.4.2
urllib3==1.25.9
webencodings==0.5.1
websocket-client==0.57.0
yapf==0.29.0
yarl==1.4.2
yaspin==0.16.0
```

Have minimal project with pyproject.toml
```
[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "pipfilelock", path = "Pipfile.lock"}


[tool.poetry]
name = "test"
version = "1.0.0"
description = ""
authors = [""]

[tool.poetry.dependencies]
python = "==3.6"
aiohttp = "*"
aioredis = "*"

[tool.poetry.dev-dependencies]
asynctest = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pytest = "*"
```

And i need to lock this packages to Pipfile.lock. For this i run follow command
```
$ dephell deps convert --env=main --level=DEBUG --format=full
DEBUG 2020-04-22 12:23:57 load dependencies... (format=poetry, path=pyproject.toml)
DEBUG 2020-04-22 12:23:57 dump dependencies... (format=pipfilelock, path=Pipfile.lock)
INFO 2020-04-22 12:23:57 converted
```

Expected fully resolved dependencies in Pipfile.lock, but i see this
```
{
    "_meta": {
        "sources": [
            {
                "url": "https://pypi.org/simple/",
                "verify_ssl": true,
                "name": "pypi"
            }
        ],
        "requires": {
            "python_version": "3.6.8"
        },
        "hash": {
            "sha256": "e0fc994407192dc4be29f1516cc098572519e7eb95b1b277e8a887a580427538"
        },
        "pipfile-spec": 6
    },
    "default": {
        "aiohttp": {},
        "aioredis": {}
    },
    "develop": {
        "asynctest": {},
        "flake8": {},
        "isort": {},
        "mypy": {},
        "pytest": {}
    }
}
```
Thank you!

 [Meta] dephell.org is down?
 ## Short description

I think `dephell.org` is down. I can't seem to run the installation command due to a cURL error. Likewise, visiting `dephell.org` gives me an error. Visiting [https://downforeveryoneorjustme.com/dephell.org](https://downforeveryoneorjustme.com/dephell.org) also says it's down.

## Steps to reproduce

Go to [dephell.org](dephell.org). Or, try running the installation script:

```bash
$ curl -L dephell.org/install | python
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0

curl: (7) Failed to connect to dephell.org port 80: Connection refused
```
Wow, thank you. Something happened with my nginx. It's up now. I need a simple monitoring tool.

 deps add does not work
 New user here, trying to learnt his interesting tool.
However, every time I try a "dephell deps add" I get this error:
```
# dephell deps add --from=pip flake8 --level=DEBUG --traceback
DEBUG merge... 
ERROR KeyError: 'Dependency already added in layer: root' 
Traceback (most recent call last):
  File "/home/ldt/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/cli.py", line 66, in main
    result = handler()
  File "/home/ldt/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/commands/deps_add.py", line 48, in __call__
    resolver.graph.add(new_root)
  File "/home/ldt/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/controllers/_graph.py", line 100, in add
    self._layers[0].add(dep)
  File "/home/ldt/.local/share/dephell/venvs/dephell/lib/python3.6/site-packages/dephell/controllers/_graph.py", line 46, in add
    raise KeyError('Dependency already added in layer: ' + dep.name)
KeyError: 'Dependency already added in layer: root'

```
I get the distinct impression that the code that's supposed to merge Layers is simply being skipped...
Hmmm... Is it possible that "deps add" only works for poetry, and not for pip, or piplock? I'm not going to test all the possible formats...

If you don't mind me re-opening this bug, I saw your merge and I pulled the fix. `deps add` now works for piplock, yes, but at the same time I fear you broke it for poetry (which was working before...)

```
$ dephell deps add --level=DEBUG --traceback --envs dev test -- pytest
DEBUG merge... 
ERROR KeyError: 'cannot find any parent for dependency: pytest' 
Traceback (most recent call last):
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/cli.py", line 66, in main
    result = handler()
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/commands/deps_add.py", line 50, in __call__
    resolved = resolver.resolve(level=1, silent=self.config['silent'])
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/controllers/_resolver.py", line 90, in resolve
    resolved = self._resolve(debug=debug, silent=silent, level=level, spinner=spinner)
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/controllers/_resolver.py", line 119, in _resolve
    no_conflicts = self._apply_deps(deps, debug=debug)
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/controllers/_resolver.py", line 208, in _apply_deps
    conflict = self.apply(dep)
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/controllers/_resolver.py", line 34, in apply
    self.graph.add(other_dep)
  File "/home/ldt/.local/share/dephell/venvs/dephell/github/dephell/controllers/_graph.py", line 118, in add
    raise KeyError('cannot find any parent for dependency: ' + str(dep.name))
KeyError: 'cannot find any parent for dependency: pytest'
```

Thank you for the feedback. Please, open a new one with all fields in the issue template filled. I cannot reproduce it without the poetry config, the command you listed works for dephell itself.

Nevermind, I've reproduced it with a dependency not in dependency list

```
❯ dephell deps add --level=DEBUG --traceback --envs dev test -- django
DEBUG merge... 
ERROR KeyError: 'cannot find any parent for dependency: django' 
Traceback (most recent call last):
  File "/home/gram/Documents/dephell/dephell/cli.py", line 66, in main
    result = handler()
  File "/home/gram/Documents/dephell/dephell/commands/deps_add.py", line 50, in __call__
    resolved = resolver.resolve(level=1, silent=self.config['silent'])
  File "/home/gram/Documents/dephell/dephell/controllers/_resolver.py", line 90, in resolve
    resolved = self._resolve(debug=debug, silent=silent, level=level, spinner=spinner)
  File "/home/gram/Documents/dephell/dephell/controllers/_resolver.py", line 119, in _resolve
    no_conflicts = self._apply_deps(deps, debug=debug)
  File "/home/gram/Documents/dephell/dephell/controllers/_resolver.py", line 208, in _apply_deps
    conflict = self.apply(dep)
  File "/home/gram/Documents/dephell/dephell/controllers/_resolver.py", line 34, in apply
    self.graph.add(other_dep)
  File "/home/gram/Documents/dephell/dephell/controllers/_graph.py", line 118, in add
    raise KeyError('cannot find any parent for dependency: ' + str(dep.name))
KeyError: 'cannot find any parent for dependency: django'


```

 Small fixes in requesting warehouse (simple and API)
 + Fix cache name. Before it removed the last part of the version that resulted in the invalid cache.
+ Do not fail on broken archives on warehouse. Close #416
+ Simplify `deps tree` output to make it a bit more readable.
+ Do not fail on invalid extras.
+ Retry aiohttp network requests. Close #406 
+ Correctly parse dependencies with more than one extra for warehouse packages.
+ Fix caching for simple warehouse
+ Fix name and version matching for simple warehouse

 dephell convert broken with private CA bundle
 ## Short description

When attempting to use dephell to convert deps with a private ssl certificate bundle, `REQUESTS_CA_BUNDLE` is ignored.

## Steps to reproduce

```bash
REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt dephell deps convert
```

## Traceback

```
ERROR SSL handshake failed on verifying the certificate
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919bc88>
transport: <_SelectorSocketTransport fd=6 read=polling write=<idle, bufsize=0>> 
ERROR SSL error in data received
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919bc88>
transport: <_SelectorSocketTransport closing fd=6 read=idle write=<idle, bufsize=0>> 
ERROR SSL handshake failed on verifying the certificate
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b8d0>
transport: <_SelectorSocketTransport fd=6 read=polling write=<idle, bufsize=0>> 
ERROR SSL error in data received
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b8d0>
transport: <_SelectorSocketTransport closing fd=6 read=idle write=<idle, bufsize=0>> 
ERROR SSL handshake failed on verifying the certificate
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b6d8>
transport: <_SelectorSocketTransport fd=6 read=polling write=<idle, bufsize=0>> 
ERROR SSL error in data received
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b6d8>
transport: <_SelectorSocketTransport closing fd=6 read=idle write=<idle, bufsize=0>> 
ERROR SSL handshake failed on verifying the certificate
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b5f8>
transport: <_SelectorSocketTransport fd=6 read=polling write=<idle, bufsize=0>> 
ERROR SSL error in data received
protocol: <asyncio.sslproto.SSLProtocol object at 0x7f31b919b5f8>
transport: <_SelectorSocketTransport closing fd=6 read=idle write=<idle, bufsize=0>> 
ERROR ClientConnectorError: Cannot connect to host pypi.org:443 ssl:default [Address family not supported by protocol] 
```

## Config

```toml
 [tool.dephell.main]
 # Provide setup.py as requested (see Makefile)
 from = {format = "poetry", path = "pyproject.toml"}
 to = {format = "setuppy", path = "setup.py"}

```

## Versions

```json
{
  "cache": "151.85Kb",
  "path": "/u/apperson/.cache/pypoetry/virtualenvs/pMGr0ipn-py3.7/lib/python3.7/site-packages/dephell",
  "python": "/u/apperson/.cache/pypoetry/virtualenvs/pMGr0ipn-py3.7/bin/python3",
  "version": "0.8.2",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

Thank you for the bug report.

Yes, of course, it is ignored. As you can see in the traceback, we use not only `requests` but `aiohttp` as well. We're using `certifi` bundles for it.

Let's add a flag to pass a custom bundle.

 dephell fails to resolve deps because it chooses a version of scipy intended for python 2
 ## Short description

<!-- Thank you for your feedback! Please, fill the sections below to help us to solve the issue. -->

## Output

```
WARNING conflict was found
————————————————————————————————————————————————————————————————————————————————

scipy==1.2.2,>=0.13.3

 + * goes from my-project==1.0.0
 + * goes from dython(0.4.5.post1, 0.4.5.post2)
 + >=0.13.3 goes from featuretools==0.13.1
 + ==1.2.2 goes from tensorflow==2.2.0rc2
```

### Expected Behaviour:

resolves to a version of scipy >= 0.13.3

## Steps to reproduce

```bash
$ dephell deps check
```

## What seems to be the problem
`tensorflow` has the following dependency:

https://github.com/tensorflow/tensorflow/blob/v2.2.0-rc2/tensorflow/tools/pip_package/setup.py#L78-L79

```
    'scipy == 1.4.1;python_version>="3"',
    'scipy == 1.2.2;python_version<"3"',
```

for whatever reason, it is returning the version of scipy intended for python 2

## Traceback

<!-- If a command fails, run it with `--traceback` and attach output -->

```
...
```

## Config

<!-- Attach `cat pyproject.toml` output -->

```toml
[tool]
[tool.dephell]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "pip", path = "requirements.txt"}
prereleases = true
venv = "/Users/hal/my-project/venv"


[tool.poetry]
name = "my-project"
authors = [
    "Hal Henke <halhenke@gmail.com>"
]
description = "Mucking around"
version = "1.0.0"

[tool.poetry.dependencies]
python = "3.7"
dython = "*"
jupyter = "*"
modin = "*"
pandas = "*"
sklearn = "*"
featuretools = "0.13.1"
scipy = "*"
tensorflow = ">=2.1"
```

# Versions

<!-- Attach `dephell inspect self` output -->

```json
{
  "cache": "22.97Mb",
  "path": "/Users/hal/.local/pipx/venvs/dephell/lib/python3.7/site-packages/dephell",
  "python": "/Users/hal/.local/pipx/venvs/dephell/bin/python",
  "version": "0.8.2",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

 FileNotFoundError when adding credentials (`dephell self auth`)
 ## Short description

Hi, I was trying to set my credentials for pypi using the following command on Windows 10:

    dephell self auth test.pypi.org my_username my_password

## Output

It raised a FileNotFoundError:

    dephell self auth test.pypi.org my_username my_password
    >>> ERROR FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\Stef\\AppData\\Local\\dephell\\dephell\\config.toml'

## Steps to reproduce

When I then create the folder/file myself it works fine, when I delete it, it raises the error again.

# Versions

```json
{
  "cache": "8.25Mb",
  "path": "c:\\users\\stef\\programs\\miniconda3\\lib\\site-packages\\dephell",
  "python": "c:\\users\\stef\\programs\\miniconda3\\python.exe",
  "version": "0.8.2",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

Please, fill in all sections from the [issue template](https://github.com/dephell/dephell/blob/master/.github/issue_template.md).

 ERROR InvalidRequirement: Parse error at "','": Expected stringEnd
 ## Short description
_I believe this is an error not directly solvable by dephell, so the issue can perhaps be closed immediately._

_That being said, I'm still adding the issue for searchability – so that people who stumble upon similar errors later can find these notes._

Package versions that have invalid metadata in PyPI will raise the error below or a similar error.
An example of such a package version is `boto3` version `1.2.0` (see https://github.com/boto/boto3/issues/2366).

I have found no resolution for this (e.g. using `--strategy=max` doesn't help).

## Output

    ERROR InvalidRequirement: Parse error at "','": Expected stringEnd

## Steps to reproduce
Using `dephell` on a `Pipfile.lock`-file that has `boto3` version `1.10.50` in it will fail with the error above.

Command to trigger the error:

    # in an empty directory
    pipenv install 'boto3==1.10.*'
    dephell uncache
    dephell deps convert --from-format=pipfilelock --from-path=Pipfile.lock --to-format=poetrylock --to-path=poetry.lock


## Traceback

<!-- If a command fails, run it with `--traceback` and attach output -->

```
Traceback (most recent call last):
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/packaging/requirements.py", line 98, in __init__
    req = REQUIREMENT.parseString(requirement_string)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 1947, in parseString
    raise exc
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 1937, in parseString
    loc, tokens = self._parse(instring, 0)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 1677, in _parseNoCache
    loc, tokens = self.parseImpl(instring, preloc, doActions)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 4052, in parseImpl
    loc, exprtokens = e._parse(instring, loc, doActions)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 1681, in _parseNoCache
    loc, tokens = self.parseImpl(instring, preloc, doActions)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/pyparsing.py", line 3798, in parseImpl
    raise ParseException(instring, loc, self.errmsg, self)
pyparsing.ParseException: Expected stringEnd, found ','  (at char 23), (line:1, col:24)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/cli.py", line 66, in main
    result = handler()
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/commands/deps_convert.py", line 92, in __call__
    dumper.dump(path=self.config['to']['path'], **dumper_kwargs)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/base.py", line 74, in dump
    content = self.dumps(reqs=reqs, content=content, project=project)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/poetrylock.py", line 70, in dumps
    doc['package'] = [self._format_req(req=req) for req in reqs]
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/poetrylock.py", line 70, in <listcomp>
    doc['package'] = [self._format_req(req=req) for req in reqs]
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/poetrylock.py", line 223, in _format_req
    deps = req.dep.dependencies
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/dependency.py", line 86, in dependencies
    for dep in self.group.dependencies:
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/cached_property.py", line 18, in __get__
    value = obj.__dict__[self.func.__name__] = self.func(obj)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/dependency.py", line 66, in group
    for group in self.groups:
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 175, in __iter__
    loop.run_until_complete(future)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 105, in _fetch_releases_deps
    if releases is None:
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 100, in _fetch_missed_deps
    asyncio.ensure_future(self._fetch_missed_deps(releases[center:-1])),
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 100, in _fetch_missed_deps
    asyncio.ensure_future(self._fetch_missed_deps(releases[center:-1])),
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 100, in _fetch_missed_deps
    asyncio.ensure_future(self._fetch_missed_deps(releases[center:-1])),
  [Previous line repeated 2 more times]
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/models/groups.py", line 86, in _fetch_missed_deps
    responses = await asyncio.gather(*tasks)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/controllers/_repos.py", line 148, in get_dependencies
    return await repo.get_dependencies(name=name, version=version, extra=extra)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/repositories/_warehouse/_api.py", line 122, in get_dependencies
    deps = await asyncio.gather(asyncio.ensure_future(task))
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/repositories/_warehouse/_api.py", line 259, in _get_from_json
    return await self._get_from_files(response['urls'])
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/repositories/_warehouse/_api.py", line 292, in _get_from_files
    converter=converter,
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/repositories/_warehouse/_base.py", line 125, in _download_and_parse
    root = converter.load(path)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/wheel.py", line 62, in load
    return self.load_dir(path)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/wheel.py", line 79, in load_dir
    root = converter.parse_info(content, urls=urls)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell/converters/egginfo.py", line 154, in parse_info
    req = PackagingRequirement(req)
  File "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/packaging/requirements.py", line 102, in __init__
    raise InvalidRequirement(
packaging.requirements.InvalidRequirement: Parse error at "','": Expected stringEnd
```

## Config

_No config needed_

# Versions

```json
WARNING cannot find config file
{
  "cache": "686.80Kb",
  "path": "/Users/malthe/Library/Application Support/dephell/venvs/dephell/lib/python3.7/site-packages/dephell",
  "python": "/Users/malthe/Library/Application Support/dephell/venvs/dephell/bin/python3",
  "version": "0.8.2",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```

A possible fix could be to wrap `req 
```python
try: 
    req = PackagingRequirement(req)
except InvalidRequirement:
    logger.warn('Skipping %s %s' % (req.raw_name, req.version))
```

The try/except should probably be even further up -- perhaps somewhere around `_fetch_missed_deps()`?

I faced it myself today, they have an incorrect requirement:

```
Requires-Dist: botocore>=1.3.0,<1.4.0',
```

(`',` part)

https://pypi.org/project/boto3/1.2.0/#files

Good thinking, I'll have a look at how to wrap it better.

 fix typo in examples
 fix typo in examples
Thanks :) As a side note, `pipenv` (in lowercase) should work as well.

 RFE: --no-network
 ## Short description

When trying to run
```sh
dephell deps convert --from pyproject.toml --to setup.py
```
inside of the building scripts for openSUSE packaging (because sometimes ``pyproject.toml``-based tools are just not stable yet enough).

Unfortunately, there is absolutely no network access inside of the build systems (for obvious security reasons), so every run of the scripts fails.

What I would like to get was the option ``--no-network`` (or something like that), which would cause dephell whenever it really needs some resource which is not installed in the system, just print the error message with the missing resources and failed.

## Output

```
[    8s] + dephell deps convert --traceback --level=DEBUG --from pyproject.toml --to setup.py
[    9s] DEBUG load dependencies... (format=flit, path=pyproject.toml)
[    9s] ERROR ConnectionError: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /pypi/requests/json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f15bb39f0d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')) 
[    9s] Traceback (most recent call last):
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connection.py", line 156, in _new_conn
[    9s]     conn = connection.create_connection(
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/util/connection.py", line 61, in create_connection
[    9s]     for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
[    9s]   File "/usr/lib64/python3.8/socket.py", line 918, in getaddrinfo
[    9s]     for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
[    9s] socket.gaierror: [Errno -3] Temporary failure in name resolution
[    9s] 
[    9s] During handling of the above exception, another exception occurred:
[    9s] 
[    9s] Traceback (most recent call last):
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connectionpool.py", line 665, in urlopen
[    9s]     httplib_response = self._make_request(
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connectionpool.py", line 376, in _make_request
[    9s]     self._validate_conn(conn)
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connectionpool.py", line 994, in _validate_conn
[    9s]     conn.connect()
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connection.py", line 300, in connect
[    9s]     conn = self._new_conn()
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connection.py", line 168, in _new_conn
[    9s]     raise NewConnectionError(
[    9s] urllib3.exceptions.NewConnectionError: <urllib3.connection.VerifiedHTTPSConnection object at 0x7f15bb39f0d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution
[    9s] 
[    9s] During handling of the above exception, another exception occurred:
[    9s] 
[    9s] Traceback (most recent call last):
[    9s]   File "/usr/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
[    9s]     resp = conn.urlopen(
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/connectionpool.py", line 719, in urlopen
[    9s]     retries = retries.increment(
[    9s]   File "/usr/lib/python3.8/site-packages/urllib3/util/retry.py", line 436, in increment
[    9s]     raise MaxRetryError(_pool, url, error or ResponseError(cause))
[    9s] urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /pypi/requests/json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f15bb39f0d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
[    9s] 
[    9s] During handling of the above exception, another exception occurred:
[    9s] 
[    9s] Traceback (most recent call last):
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/cli.py", line 64, in main
[    9s]     result = handler()
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/commands/deps_convert.py", line 76, in __call__
[    9s]     resolver.apply_envs(set(self.config['envs']))
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/controllers/_resolver.py", line 166, in apply_envs
[    9s]     self.apply(dep)
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/controllers/_resolver.py", line 29, in apply
[    9s]     for new_dep in parent.dependencies:
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/models/dependency.py", line 86, in dependencies
[    9s]     for dep in self.group.dependencies:
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/cached_property.py", line 18, in __get__
[    9s]     value = obj.__dict__[self.func.__name__] = self.func(obj)
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/models/dependency.py", line 66, in group
[    9s]     for group in self.groups:
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/models/groups.py", line 169, in __iter__
[    9s]     release = self.releases[0]
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/cached_property.py", line 18, in __get__
[    9s]     value = obj.__dict__[self.func.__name__] = self.func(obj)
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/models/groups.py", line 34, in releases
[    9s]     releases = self.dep.repo.get_releases(self.dep)
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/controllers/_repos.py", line 138, in get_releases
[    9s]     return repo.get_releases(dep=dep)
[    9s]   File "/usr/lib/python3.8/site-packages/dephell/repositories/_warehouse/_api.py", line 75, in get_releases
[    9s]     response = session.get(url, auth=self.auth)
[    9s]   File "/usr/lib/python3.8/site-packages/requests/sessions.py", line 543, in get
[    9s]     return self.request('GET', url, **kwargs)
[    9s]   File "/usr/lib/python3.8/site-packages/requests/sessions.py", line 530, in request
[    9s]     resp = self.send(prep, **send_kwargs)
[    9s]   File "/usr/lib/python3.8/site-packages/requests/sessions.py", line 643, in send
[    9s]     r = adapter.send(request, **kwargs)
[    9s]   File "/usr/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
[    9s]     raise ConnectionError(e, request=request)
[    9s] requests.exceptions.ConnectionError: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /pypi/requests/json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f15bb39f0d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))
[    9s] error: Bad exit status from /var/tmp/rpm-tmp.Z2jJpN (%prep)
[    9s] 
[    9s] 
[    9s] RPM build errors:
[    9s]     Bad exit status from /var/tmp/rpm-tmp.Z2jJpN (%prep)
[    9s] 
[    9s] stitny failed "build python-dephell_changelogs.spec" at Mon Mar 23 23:15:33 UTC 2020.
[    9s]
```

## Steps to reproduce

See above: run ``dephell deps convert`` in the openSUSE Build System.

## Config

This was ``pyproject.toml`` from ``dephell_changelog`` package.

# Versions

```json
{
  "cache": "0b",
  "path": "/usr/lib/python3.8/site-packages/dephell",
  "python": "/usr/bin/python3",
  "version": "0.8.1",
  "versions": {
    "dephell-archive": "0.1.6",
    "dephell-argparse": "0.1.2",
    "dephell-changelogs": "0.0.1",
    "dephell-discover": "0.2.10",
    "dephell-licenses": "0.1.6",
    "dephell-links": "0.1.5",
    "dephell-markers": "1.0.3",
    "dephell-pythons": "0.1.14",
    "dephell-setuptools": "0.2.3",
    "dephell-shells": "0.1.4",
    "dephell-specifier": "0.2.1",
    "dephell-venvs": "0.1.17",
    "dephell-versioning": "0.1.1"
  }
}
```
@mcepl Why do you think this would help any? `dephell` converts projects across tools, those tools may or may not have the ability to do something like that (most don't).

I am sorry, but I really don't understand what you are saying. My RFE was to make ``dephell deps convert`` working in the environment where network is not available. What’s so difficult to understand?

Thank you for your feedback. I think the problem isn't a missed flag to forbid network requests but that it tries to do so when it's possible to avoid it. Let me see what we can do to not make network requests here.

 Named venv
 ## Short description

Named venv are a feature of virtualenvwrapper and pew that let you create a virtualenv and give it a name. You can then activate it and use it from anywere, by just stating its name.

It's useful for testing things you find on the web, demo or teach something and everything that does not relate to a particular directory.

Pew also have the best of both world, you can take your named venv, and link it to a project directory. This way, when you activate it, you are moved to this directory. 

This makes switching to a project very fast.


[dephell venv entrypoint](https://dephell.readthedocs.io/cmd-venv-entrypoint.html) a bit similar. It runs not the shell but a command.

Also related: #70 

I guess, we should implement it as `dephell venv entrypoint --command
 Update changelog
 
 Simplify links putting for old formats
 For PyPI, passing `home_page` and having `Homepage` in `project_urls` is the same. So, let's stop putting `url` and `download_url` as separate fields and just use `project_urls` for everything. Easy to remember, easy to code.
