 Use android:title as color picker dialog title
 Used **android:title** as **ColorPickerDialog** title.
This also extending **AppCompatDialog** instead of the old **Dialog** class.

![image](https://user-images.githubusercontent.com/4012678/78993952-8caeac80-7b71-11ea-9c9a-d093942d76bd.png)

Thanks 👍 

 Used androidx.preference.Preference
 Used androidx.preference.Preference instead of Preference.
This will also make the library works well with AppCompat and AndroidX
Thanks for your work 👍 

 Typo in comment of ColorPickerPreference.java
 In the comment of the class it says:

_A preference type that allows a user to choose a time_

but I'm pretty sure what I can see the user can choose a color not a _time_

Please change comment to:

_A preference type that allows a user to choose a color_

Thanks for that, fixed

 Error 
 Error sir on Aide 3.2
trying implements 'net.margaritov...error
trying implementation 'net.margaritov...error
tryning compile 'net.margaritov...not error but running the app error.
how to fix it sir
![Screenshot_20190823-194935](https://user-images.githubusercontent.com/27966265/63593879-2b849980-c5df-11e9-8a9f-ad8e68f8cd42.png)
![Screenshot_20190823-194919](https://user-images.githubusercontent.com/27966265/63593893-363f2e80-c5df-11e9-900e-25f20c4d883a.png)



 Feature request
 1. The caption of the color picker should be the title, not 'Color Picker'.

2. Since the color picker already has a default value, there should be a button to restore the default value.

3. The 'Press on color to apply' string should be parameterizable in order to provide a localized string.

Great work though, thanks.
Great features, if someone can, please create PR, I'm not Android developer
for a few years 😀

On Sun, Jan 6, 2019, 00:18 MickeyKnox <notifications@github.com wrote:

>
>    1.
>
>    The caption of the color picker should be the title, not 'Color
>    Picker'.
>    2.
>
>    Since the color picker already has a default value, there should be a
>    button to restore the default value.
>
> Great work though, thanks.
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/attenzione/android-ColorPickerPreference/issues/46>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AARZO9olhI8A_5BxBeUs8z-oLdRjurQ7ks5vASTLgaJpZM4ZyH4s>
> .
>


 Build update to android pie - API 28
 This update fixes common bugs during usage of the project like "unable to merge dex" and "compile is obsolete". Google will drop updates of apps build with Android version earlier than marshmallow this year, thus this update comes in handy.
Thanks for the update.
Is it necessary to add `.idea` and `Sample` to the repository? 

@attenzione you are welcome, Thank you too.
`.idea` is not very necessary but `Sample` is necessary since I changed the configuration for the module `Sample`. Using the same build version (`compileSdkVersion 28`) is recommended.

> @attenzione you are welcome, Thank you too.
> `.idea` is not very necessary but `Sample` is necessary since I changed the configuration for the module `Sample`. Using the same build version (`compileSdkVersion 28`) is recommended.

I thought to remove `Sample` from the repository.
Okey, let's remove `.idea` and keep `Sample` for now.

okay, here's a new commit @attenzione 
removed autogenerated files: .idea, .gradle and build folder. This will be generated if the user clones and builds the project on Android studio. This does not affect maven usage through `Gradle`.
I think Sample is really helpful, Its the one that gave me interest to the project since it shows how the app works. 😃 

 Program type already present: net.margaritov.preference.colorpicker.BuildConfig
 Program type already present: net.margaritov.preference.colorpicker.BuildConfig
这个问题该如何解决
 Fatal Exception: java.lang.NullPointerException
 In some devices(OS: 6.0.1, Galaxy A7), error occurs.

```
Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.graphics.Bitmap.isRecycled()' on a null object reference
       at android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1310)
       at android.graphics.Canvas.drawBitmap(Canvas.java:1445)
       at net.margaritov.preference.colorpicker.AlphaPatternDrawable.draw(AlphaPatternDrawable.java:57)
       at net.margaritov.preference.colorpicker.ColorPickerPanelView.onDraw(ColorPickerPanelView.java:86)
       at android.view.View.draw(View.java:17526)
       at android.view.View.updateDisplayListIfDirty(View.java:16519)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3910)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3890)
       at android.view.View.updateDisplayListIfDirty(View.java:16479)
       at android.view.View.draw(View.java:17295)
       at android.view.ViewGroup.drawChild(ViewGroup.java:3926)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:3716)
       at android.view.View.updateDisplayListIfDirty(View.java:16514)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3910)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3890)
       at android.view.View.updateDisplayListIfDirty(View.java:16479)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3910)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3890)
       at android.view.View.updateDisplayListIfDirty(View.java:16479)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3910)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3890)
       at android.view.View.updateDisplayListIfDirty(View.java:16479)
       at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:325)
       at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:331)
       at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:366)
       at android.view.ViewRootImpl.draw(ViewRootImpl.java:3234)
       at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:3033)
       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2615)
       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1528)
       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:7530)
       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)
       at android.view.Choreographer.doCallbacks(Choreographer.java:686)
       at android.view.Choreographer.doFrame(Choreographer.java:622)
       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)
       at android.os.Handler.handleCallback(Handler.java:739)
       at android.os.Handler.dispatchMessage(Handler.java:95)
       at android.os.Looper.loop(Looper.java:148)
       at android.app.ActivityThread.main(ActivityThread.java:7329)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
```
@tree1891 are you still facing this issue?

yes

perform a git clone of the latest commit, open with android studio and run sample to test first, the issue might be because of an omission

 Upload to bintray for gradle installation
 You can now install ColorPickerPreference with:

    compile 'net.margaritov.preference.colorpicker.ColorPickerPreference:ColorPickerPreference:1.0.0'

in your `build.gradle` file, as many Android library.
You can see the library on bintray: https://bintray.com/spechard/android-ColorPickerPreference/android-colorpickerpreference/1.0.0


Thanks!


 Unsupported major.minor version 52.0
 Unsupported major.minor version 52.0
Today get this error in 
MyPath\AndroidStudioProjects\MyApp\app\libs\ColorPickerPreference\ColorPickerPreference\build.gradle

before everything worked fine

Try to update to java 8

Ok

 Update ColorPickerDialog.java
 Material Design Dialog Container

 ColorPickerPreference cannot be cast to android.support.v7.preference.Preference
 java.lang.ClassCastException: net.margaritov.preference.colorpicker.ColorPickerPreference cannot be cast to android.support.v7.preference.Preference

any chance to migrate the code to the new appcompat preference ?

 Not Available
 Hi,
this files are no longer available:

Error:A problem occurred configuring project ':app'.

> Could not find android-ColorPickerPreference.jar (com.github.attenzione:android-ColorPickerPreference:e3aa301016).
>   Searched in the following locations:
>       https://jitpack.io/com/github/attenzione/android-ColorPickerPreference/e3aa301016/android-ColorPickerPreference-e3aa301016.jar

Please fix this. Thank you very much!

Hi @DtotheZ 
Have you tried `com.github.attenzione:android-ColorPickerPreference:e3aa301016@aar` ?


 Fix for perisisting defaultValue attr
 I have noticed that when you set defaultValue you can only set it as an actual color integer.
1. If you set it as hex string it crashes, as it expects integer
2. If you set it as reference to resources color, it persists 0 into shared preferences

Method onGetDefaultValue was modified to look for a string and if it is not null or begins with hash, to use built in method to parse hex string into color integer and return it as default. Color hex can only be used with 6 or 8 chars. If the string is null, it will look for an integer and use it.

Now default can be set as:
1. Color integer
2. Hex string (#ffffff or #ffffffff)
3. Resource reference will be parsed as hex string and return valid color integer

Only the last commit is relevant actually. I had to add condition for the not breaking the integer defaultValue

Please change comment for method, as it now used :)
https://github.com/daxgirl/android-ColorPickerPreference/blob/master/ColorPickerPreference/src/main/java/net/margaritov/preference/colorpicker/ColorPickerPreference.java#L256


Thank you! Done!


 Setting defaultValue
 Hello,
I have been using your ColorPicker in one of my projects and it's by far the best out there. Thank you very much!

I have noticed a little problem and I wanted to offer you a solution I programmed into my project.
There is a little kink in setting the color in attr defaultValue. If you set a color as actual integer, then it works fine, but if you set it as reference to resources, f.e. @color/someColor, you always get 0 in shared preferences. You also can't get it to set defaultValue using hex string.

Both problems are fixed by using this inside onGetDefaultValue method:

```
@Override
    protected Object onGetDefaultValue(TypedArray a, int index) {
        int colorInt;
        String mHexDefaultValue = a.getString(index);
        if (mHexDefaultValue != null) {
            colorInt = convertToColorInt(mHexDefaultValue);
            return colorInt;

    } else {
        return a.getColor(index, Color.BLACK);
    }
}
```

I have tested repeatedly and now it sets the actual integer value if you use either proper hex string (6 or 8 chars) or reference to resource color.

If you find this useful, feel free to include.

Thank you again for your great work,
Anna

Thank you! You can create pull request and i will merge it


 fixed rotation when using android:configChanges
 If the mainfest has config changes attributes for an activity

e.g. using
android:configChanges="keyboard|keyboardHidden|orientation|screenSize|locale"

the layout is not re-created on orientation change.
Since the ColorPicker dialog uses different layouts for different
orientations, it will end up using the wrong layout.

Added a global layout change observer to detect this change
and recreate the layout

I've tested it on 4.4 and 2.3 so far

I'm not sure there is a different way to achieve it


thank you


 Sample project moved to a separate directory
 Moved sample project to a separate directory, not seen by the current Gradle config. This solves the problem reported on issue #33 

thanx!


You're welcome! Thanks for taking the time for this


plz can you add a button or something when i click android:defaultValue will used plz i need this badly or plz tell me how can i do that my own.


 Sample activity causing trouble because of its placement in the project tree
 The sample activity to showcase the library capabilities (`ColorPickerPreference/src/main/java/net/margaritov/preference/colorpicker/Test.java`) and the manifest file where it is declared (`ColorPickerPreference/src/main/AndroidManifest.xml`) are placed alongside the library sources.

Since settings.gradle has `include ':app', ':ColorPickerPreference'`, that manifest is merged with the main manifest of the app using the library.

As a result, an app that uses the library with the directory tree laid out here ends up with two launcher activities and two icons in the app drawer.

The workaround is commenting the entire `<application>` tag in the manifest, but it would be great to see the sample activity being placed in a different directory not being seen by Gradle - a usual practice in library code. 

I'm also having the same issue after importing this library just as in README.
In my case, I put the following line in my main manifest to remove the sample activity included in this library.

<!-- to remove sample activity from the library -->

<activity android:name="net.margaritov.preference.colorpicker.Test" tools:node="remove"/>

It would be greatly appreciated if you can move the sample activity to a different directory as @JoseGD suggests.


 Added setup instructions to project
 Makes it more beginner friendly. 

Thank you


 Made change to Androidstudio
 
 Works on Android 1.5
 I've tested this library on Android 1.6, and it seems to work fine.  So you can probably change your min sdk to 4 :)

(Note, I tested the one on jcenter: com.robbypond:android-ColorPickerPreference:1.11.1)

It seems to work on Android 1.5 too!  So you could change the min sdk to 3 even.


 Implemented display ColorPicker in a simple Activity
 Hi Sir,

I just implemented to show ColorPicker in a simple Activity to the current library. Hope it'll save some body's time like me. Thank you for your excellency and generosity to share this code. Complete credits goes to you. I've done nothing major in it. Just added changes to get my requirement and thought it would help to somebody like me as i didn't able to find any web reference to implement a ColorPicker in a simple Activity. So, shown a little courage to contribute to your sourcecode.

Hope It makes sense. Attached screen shots.
![2014-04-09-12-48-55](https://cloud.githubusercontent.com/assets/592596/2652827/18f32bac-bfb8-11e3-928e-040417a03f46.png)
![2014-04-09-12-49-11](https://cloud.githubusercontent.com/assets/592596/2652828/1921f52c-bfb8-11e3-9d1b-7f02b289957b.png)
![2014-04-09-12-49-24](https://cloud.githubusercontent.com/assets/592596/2652829/19507e56-bfb8-11e3-9abd-566a323ea01d.png)

Thank you again,
PraveenB (Y)

Hi Sir,

Thank you for the comments, which encourages me to made few more changes. 
I implemented the changes to the library project code as per your comments . I made changes to create example for both, preference & standalone dialog. And used a different path.

Attached screen shots. Hope these changes helps somebody.
![2014-04-10-16-54-45](https://cloud.githubusercontent.com/assets/592596/2666818/23bde986-c0a4-11e3-9bc4-92d648d5ceab.png)
![2014-04-10-16-54-54](https://cloud.githubusercontent.com/assets/592596/2666819/23bf7698-c0a4-11e3-83b5-1144de12957f.png)
![2014-04-10-16-56-29](https://cloud.githubusercontent.com/assets/592596/2666820/23c1e0ae-c0a4-11e3-87eb-566c53e46b79.png)

Thank you.
PraveenB


 Selecting Color doesn't update preview
 I have found a workaround that finishes the settings activity and restarts it. But is there a reason why in ColoPickerPreference the setImageBitmap(getPreviewBitmap()) does not reflect the change when a new color is selected?

If screen is rotated the preview box has the newly selected color.

ICS and Jellybean have this same effect.

I fixed this by adding a notifyChanged(); at the end of setPreviewColor() Sorry I didn't do a pull request but its a one line fix.


Puting notifyChanged() at the end of setPreviewColor() seems to cause an infinite loop in the draw cycle, causing an overall slowdown. This doesn't happen if you put notifyChanged() at the end of the onColorChanged(int color) method instead.


Thanks

 Update settings.xml
 https://github.com/attenzione/android-ColorPickerPreference/issues/19

defaultValue="#000FF" is invalid,change it to defaulfValue="0xff0000ff".

 Some parts of view is disappeared when screen is rotated
 When "orientation" and "screenSize" is defined in Activity's configChanges and screen is rotated at Android 4.0+, some parts of view is disappeared. For example, AndroidManifest is following.

<activity
    android:name="com.example.testcolorpicker.TestActivity"
    android:label="@string/app_name" 
    android:launchMode="singleTask"
    android:configChanges="orientation|screenSize">
    <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
    </intent-filter>
</activity>

If "screenSize" is deleted from configChanges, it works properly.
Please look at the following screenshot which some part of view is disappeared.

<landscape -> portrait>
![testcolorpicker_portrait](https://f.cloud.github.com/assets/2920248/1270248/df6e739e-2d06-11e3-823f-26a924f6782a.png)

<portrait -> landscape>
![testcolorpicker_landscape](https://f.cloud.github.com/assets/2920248/1270250/e48dda18-2d06-11e3-9755-105ac4433215.png)

 R cannot be resolved to a variable
 There is no R files under gen/.

How i can solve this?

 How would I apply the integer?
 If I usually use model.setColor(Color.BLUE); how would I use this instead? I've seen it used in a number of live wallpapers, I would just like to know how to do it. Thank you.

setting default color only possible from xml, or you can save your preference with the same name, than dialog will pick yours


 Hex picker tweaks
 I made some minor UI changes to the way the manual selection of a HEX color works. I found it difficult to change the color as the textwatcher was a little too eager to reset the color. Instead I use the ime action done. Plus I switched it to upper case. Feel free to include or discard as you like..

 Dialog theming
 I've tried to modify the dialog theming but it doesn't works. I changed ColorPickerDialog constructor and now it works

public ColorPickerDialog(Context context, int initialColor) {
super(context, R.style.MyTheme);

 java.lang.NullPointerException
 Hi,u guys.
Does anyone has this wired problem?

java.lang.NullPointerException
    at com.xxx.xxx.preferences.widget.b.(ColorPickerDialog.java:50)

The pic.

![image](https://f.cloud.github.com/assets/1912644/552399/36c8687c-c351-11e2-9046-732af581194c.png)

Could you post the entire stack trace?


